# WORDS
007 :: N\N :: \P y.(P(y) & COUNT(y,007))
100 :: N/N :: \P y.(P(y) & COUNT(y,100))
13 :: N\N :: \P y.(P(y) & COUNT(y,13))
14 :: N/N :: \P y.(P(y) & COUNT(y,14))
1911 :: N\N :: \P y.(P(y) & COUNT(y,1911))
1911 :: N/N :: \P y.(P(y) & COUNT(y,1911))
1937 :: N/N :: \P y.(P(y) & COUNT(y,1937))
1940s :: N :: \x.1940s(x)
1964 :: N/N :: \P y.(P(y) & COUNT(y,1964))
1965 :: N/N :: \P y.(P(y) & COUNT(y,1965))
1967 :: N\N :: \P y.(P(y) & COUNT(y,1967))
1968 :: N/N :: \P y.(P(y) & COUNT(y,1968))
1976 :: N :: \P y.(P(y) & COUNT(y,1976))
1976 :: N/N :: \P y.(P(y) & COUNT(y,1976))
1980 :: N\N :: \P y.(P(y) & COUNT(y,1980))
1980 :: N/N :: \P y.(P(y) & COUNT(y,1980))
1982 :: N\N :: \P y.(P(y) & COUNT(y,1982))
1983 :: N\N :: \P y.(P(y) & COUNT(y,1983))
1984 :: N/N :: \P y.(P(y) & COUNT(y,1984))
1985 :: N\N :: \P y.(P(y) & COUNT(y,1985))
1986 :: N/N :: \P y.(P(y) & COUNT(y,1986))
1986 :: N\N :: \P y.(P(y) & COUNT(y,1986))
1987 :: N\N :: \P y.(P(y) & COUNT(y,1987))
1989 :: N\N :: \P y.(P(y) & COUNT(y,1989))
1991 :: N\N :: \P y.(P(y) & COUNT(y,1991))
1992 :: N/N :: \P y.(P(y) & COUNT(y,1992))
1994 :: N\N :: \P y.(P(y) & COUNT(y,1994))
1st :: N/N :: \P y.(P(y) & COUNT(y,1st))
2 :: N\N :: \P y.(P(y) & COUNT(y,_2))
20 :: N\N :: \P y.(P(y) & COUNT(y,20))
2001 :: N\N :: \P y.(P(y) & COUNT(y,2001))
2004 :: (N\N)\(N\N) :: \P Q y.(P & Q(y) & COUNT(y,2004))
2004 :: N\N :: \P y.(P(y) & COUNT(y,2004))
2004 :: N/N :: \P y.(P(y) & COUNT(y,2004))
2009 :: N\N :: \P y.(P(y) & COUNT(y,2009))
2011 :: N\N :: \P y.(P(y) & COUNT(y,2011))
21 :: N/N :: \P y.(P(y) & COUNT(y,21))
25 :: N/N :: \P y.(P(y) & COUNT(y,25))
269 :: N/N :: \P y.(P(y) & COUNT(y,269))
3rd :: N/N :: \P y.(P(y) & 3rd(y))
4 :: N/N :: \P y.(P(y) & COUNT(y,_4))
5 :: N\N :: \P y.(P(y) & COUNT(y,_5))
50 :: N/N :: \P y.(P(y) & COUNT(y,50))
53 :: N/N :: \P y.(P(y) & COUNT(y,53))
6 :: N\N :: \P y.(P(y) & COUNT(y,_6))
69 :: N/N :: \P y.(P(y) & COUNT(y,69))
77 :: N/N :: \P y.(P(y) & COUNT(y,77))
78 :: N/N :: \P y.(P(y) & COUNT(y,78))
89 :: N/N :: \P y.(P(y) & COUNT(y,89))
93 :: N/N :: \P y.(P(y) & COUNT(y,93))
Act :: N :: \x.EQUAL(x,act)
Actors :: N/N :: \x.EQUAL(x,actors)
Adams :: N :: \x.EQUAL(x,adams)
Address :: N :: \x.EQUAL(x,address)
Affair :: N :: \x.EQUAL(x,affair)
Afghanistan :: N :: \x.EQUAL(x,afghanistan)
After :: (S/S)/N :: \P Q y.exists z.(P(z) & Q(y) & after:1(y,y) & after:2(y,z))
After :: (S/S)/S :: \P Q y.exists z.(P(z) & Q(y) & after:1(y,y) & after:2(y,z))
After :: (S/S)/(S\N) :: \P Q y.exists z.(P(z) & Q(y) & after:1(y,y) & after:2(y,z))
Afterwards :: S/S :: \P y.(P(y) & afterwards(y))
Agent :: N/N :: \x.EQUAL(x,agent)
Agent :: N :: \x.EQUAL(x,agent)
Air :: N :: \x.EQUAL(x,air)
Air :: N/N :: \x.EQUAL(x,air)
Also :: S/S :: \P y.(P(y) & also(y))
Although :: (S/S)/S :: \P Q y.exists z.(P(z) & Q(y) & although:1(y,y) & although:2(y,z))
Alzheimer :: N/N :: \x.EQUAL(x,alzheimer)
Alzheimer :: N :: \x.EQUAL(x,alzheimer)
America :: N :: \x.EQUAL(x,america)
American :: N/N :: \P y.(P(y) & american(y))
American :: N/N :: \x.EQUAL(x,american)
American :: N :: \x.EQUAL(x,american)
Americans :: N :: \x.EQUAL(x,americans)
Angeles :: N/N :: \x.EQUAL(x,angeles)
Angeles :: N :: \x.EQUAL(x,angeles)
Army :: N :: \x.EQUAL(x,army)
As :: (S/S)/N :: \P Q y.exists z.(P(z) & Q(y) & as:1(y,y) & as:2(y,z))
As :: (S/S)/S :: \P Q y.exists z.(P(z) & Q(y) & as:1(y,y) & as:2(y,z))
Association :: N :: \x.EQUAL(x,association)
At :: (S/S)/N :: \P Q y.exists z.(P(z) & Q(y) & at:1(y,y) & at:2(y,z))
Audio :: N :: \x.EQUAL(x,audio)
August :: N :: \x.EQUAL(x,august)
Award :: N :: \x.EQUAL(x,award)
B :: N/N :: \x.EQUAL(x,_b)
Barack :: N/N :: \x.EQUAL(x,barack)
Barbara :: N/N :: \x.EQUAL(x,barbara)
Baroness :: N/N :: \x.EQUAL(x,baroness)
Barry :: N/N :: \x.EQUAL(x,barry)
Bath :: N :: \x.bath(x)
Before :: (S/S)/(S\N) :: \P Q y.exists z.(P(z) & Q(y) & before:1(y,y) & before:2(y,z))
Before :: ((S/S)/PP)/N :: \P Q R y.exists w z.(P(w) & Q(z) & R(y) & before:1(y,y) & before:2(y,z) & before:3(y,w))
Bel :: N/N :: \x.EQUAL(x,bel)
Berlin :: N/N :: \x.EQUAL(x,berlin)
Berlin :: N :: \x.EQUAL(x,berlin)
Berlusconi :: N/N :: \x.EQUAL(x,berlusconi)
Best :: N/N :: \x.EQUAL(x,best)
Bette :: N/N :: \x.EQUAL(x,bette)
Betty :: N/N :: \x.EQUAL(x,betty)
Bible :: N :: \x.EQUAL(x,bible)
Bill :: N/N :: \x.EQUAL(x,bill)
Billy :: N/N :: \x.EQUAL(x,billy)
Bird :: N/N :: \x.EQUAL(x,bird)
Blair :: N :: \x.EQUAL(x,blair)
Board :: N :: \x.EQUAL(x,board)
Bogart :: N :: \x.EQUAL(x,bogart)
Bosley :: N/N :: \x.EQUAL(x,bosley)
Brady :: N :: \x.EQUAL(x,brady)
Brandenburg :: N/N :: \x.EQUAL(x,brandenburg)
Brian :: N/N :: \x.EQUAL(x,brian)
British :: N/N :: \x.EQUAL(x,british)
British :: N/N :: \P y.(P(y) & british(y))
Brooklyn :: N/N :: \x.EQUAL(x,brooklyn)
Brooks :: N :: \x.EQUAL(x,brooks)
Brown :: N :: \x.EQUAL(x,brown)
Bush :: N :: \x.EQUAL(x,bush)
But :: S/S :: \P Q x.(P(x) & Q(x))
CBS :: N/N :: \x.EQUAL(x,cbs)
CEO :: N/N :: \x.EQUAL(x,ceo)
CNN :: N :: \x.EQUAL(x,cnn)
CV64 :: N :: \x.EQUAL(x,cv64)
CVN76 :: N :: \x.EQUAL(x,cvn76)
California :: N/N :: \x.EQUAL(x,california)
California :: N :: \x.EQUAL(x,california)
Canadian :: N/N :: \x.EQUAL(x,canadian)
Capitol :: N/N :: \x.EQUAL(x,capitol)
Captain :: N/N :: \x.EQUAL(x,captain)
Carter :: N :: \x.EQUAL(x,carter)
Cathedral :: N :: \x.EQUAL(x,cathedral)
Catholic :: N :: \x.EQUAL(x,catholic)
Centennial :: N/N :: \x.EQUAL(x,centennial)
Century :: N/N :: \x.EQUAL(x,century)
Challenger :: N/N :: \x.EQUAL(x,challenger)
Challenger :: N :: \x.EQUAL(x,challenger)
Chancellor :: N/N :: \x.EQUAL(x,chancellor)
Chicago :: N/N :: \x.EQUAL(x,chicago)
Chicago :: N :: \x.EQUAL(x,chicago)
Cielo :: N :: \x.EQUAL(x,cielo)
City :: N :: \x.EQUAL(x,city)
Civilian :: N/N :: \x.EQUAL(x,civilian)
Clinton :: N :: \x.EQUAL(x,clinton)
Coin :: N/N :: \x.EQUAL(x,coin)
Cold :: N/N :: \x.EQUAL(x,cold)
Collection :: N :: \x.EQUAL(x,collection)
College :: N :: \x.EQUAL(x,college)
Commission :: N/N :: \x.EQUAL(x,commission)
Communicator :: N :: \x.EQUAL(x,communicator)
Communist :: N/N :: \P y.(P(y) & communist(y))
Condoleezza :: N/N :: \x.EQUAL(x,condoleezza)
Congress :: N :: \x.EQUAL(x,congress)
Congressional :: N/N :: \x.EQUAL(x,congressional)
Constellation :: N :: \x.EQUAL(x,constellation)
Contras :: N :: \x.EQUAL(x,contras)
Control :: N/N :: \x.EQUAL(x,control)
Convention :: N :: \x.EQUAL(x,convention)
Court :: N/N :: \x.EQUAL(x,court)
Cowboy :: N :: \x.cowboy(x)
Craig :: N/N :: \x.EQUAL(x,craig)
Crowther :: N :: \x.EQUAL(x,crowther)
Cubs :: N :: \x.EQUAL(x,cubs)
D :: N/N :: \x.EQUAL(x,_d)
DC :: N :: \x.EQUAL(x,dc)
Dark :: N/N :: \x.EQUAL(x,dark)
Davis :: N :: \x.EQUAL(x,davis)
Day :: N/N :: \x.EQUAL(x,day)
Day :: N :: \x.EQUAL(x,day)
Deal :: N :: \x.EQUAL(x,deal)
Defense :: N/N :: \x.EQUAL(x,defense)
Delahanty :: N :: \x.EQUAL(x,delahanty)
Democrat :: N :: \x.EQUAL(x,democrat)
Democrat :: N/N :: \x.EQUAL(x,democrat)
Democratic :: N/N :: \P y.(P(y) & democratic(y))
Democratic :: N/N :: \x.EQUAL(x,democratic)
Democrats :: N :: \x.EQUAL(x,democrats)
Dennis :: N/N :: \x.EQUAL(x,dennis)
Despite :: (S/S)/(S\N) :: \P Q y.exists z.(P(z) & Q(y) & despite:1(y,y) & despite:2(y,z))
Diaries :: N :: \x.EQUAL(x,diaries)
Directors :: N :: \x.directors(x)
Disease :: N :: \x.disease(x)
Dixon :: N :: \x.EQUAL(x,dixon)
Douglas :: N :: \x.EQUAL(x,douglas)
Drugs :: N :: \x.EQUAL(x,drugs)
During :: (S/S)/N :: \P Q y.exists z.(P(z) & Q(y) & during:1(y,y) & during:2(y,z))
Dwight :: N/N :: \x.EQUAL(x,dwight)
Eagle :: N :: \x.EQUAL(x,eagle)
Early :: (S/S)/PP :: \P Q y.exists z.(P(z) & Q(y) & early(y))
Eisenhower :: N :: \x.EQUAL(x,eisenhower)
Electric :: N/N :: \x.EQUAL(x,electric)
Elizabeth :: N/N :: \x.EQUAL(x,elizabeth)
Embassy :: N :: \x.EQUAL(x,embassy)
English :: N :: \x.EQUAL(x,english)
Era :: N :: \x.era(x)
Errol :: N/N :: \x.EQUAL(x,errol)
Eureka :: N/N :: \x.EQUAL(x,eureka)
Europe :: N :: \x.EQUAL(x,europe)
Evangelicals :: N :: \x.EQUAL(x,evangelicals)
Even :: (S/S)/(S/S) :: \P Q y.(P & Q(y) & even(y))
Evil :: N/N :: \x.EQUAL(x,evil)
FBI :: N :: \x.EQUAL(x,fbi)
Fame :: N :: \x.EQUAL(x,fame)
Fe :: N/N :: \x.EQUAL(x,fe)
February :: N :: \x.EQUAL(x,february)
First :: N/N :: \x.EQUAL(x,first)
Flight :: N :: \x.EQUAL(x,flight)
Florida :: N :: \x.EQUAL(x,florida)
Flynn :: N :: \x.EQUAL(x,flynn)
Following :: (S/S)/N :: \P Q y.exists z.(P(z) & Q(y) & following:1(y,y) & following:2(y,z))
For :: (N\N)/N :: \P Q y.exists z.(P(z) & Q(y) & for:1(y,y) & for:2(y,z))
Forces :: N/N :: \x.EQUAL(x,forces)
Ford :: N :: \x.EQUAL(x,ford)
Foreign :: N/N :: \P y.(P(y) & foreign(y))
Former :: N/N :: \x.EQUAL(x,former)
Foundation :: N :: \x.EQUAL(x,foundation)
Francisco :: N :: \x.EQUAL(x,francisco)
Franklin :: N/N :: \x.EQUAL(x,franklin)
Freedom :: N :: \x.EQUAL(x,freedom)
Freedom :: N/N :: \x.EQUAL(x,freedom)
Frick :: N :: \x.EQUAL(x,frick)
From :: (S/S)/N :: \P Q y.exists z.(P(z) & Q(y) & from:1(y,y) & from:2(y,z))
GPS :: N :: \x.EQUAL(x,gps)
Gahagan :: N/N :: \x.EQUAL(x,gahagan)
Galesburg :: N :: \x.EQUAL(x,galesburg)
Gate :: N :: \x.EQUAL(x,gate)
General :: N/N :: \x.EQUAL(x,general)
George :: N/N :: \x.EQUAL(x,george)
Gerald :: N/N :: \x.EQUAL(x,gerald)
Gerhard :: N/N :: \x.EQUAL(x,gerhard)
German :: N/N :: \x.EQUAL(x,german)
Ghazi :: N/N :: \x.EQUAL(x,ghazi)
Gipp :: (S\N)\(S\N) :: \x.EQUAL(x,gipp)
Gipper :: N :: \x.EQUAL(x,gipper)
God :: N :: \x.EQUAL(x,god)
Gold :: N/N :: \x.EQUAL(x,gold)
Goldwater :: N :: \x.EQUAL(x,goldwater)
Goodwin :: N :: \x.EQUAL(x,goodwin)
Gorbachev :: N :: \x.EQUAL(x,gorbachev)
Governor :: N :: \x.EQUAL(x,governor)
Governor :: N/N :: \x.EQUAL(x,governor)
Governors :: N/N :: \x.EQUAL(x,governors)
Graham :: N :: \x.EQUAL(x,graham)
Great :: N/N :: \x.EQUAL(x,great)
Grenada :: N :: \x.EQUAL(x,grenada)
Grosvenor :: N/N :: \x.EQUAL(x,grosvenor)
Guild :: N :: \x.EQUAL(x,guild)
H :: N/N :: \x.EQUAL(x,_h)
Hall :: N :: \x.EQUAL(x,hall)
Hall :: N/N :: \x.EQUAL(x,hall)
Hamid :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & hamid(e))
He :: N :: \x.EQUAL(x,he)
Helen :: N/N :: \x.EQUAL(x,helen)
Herbert :: N/N :: \x.EQUAL(x,herbert)
Hilton :: N/N :: \x.EQUAL(x,hilton)
Hinckley :: N :: \x.EQUAL(x,hinckley)
His :: N/N :: \x.EQUAL(x,his)
Hollywood :: N :: \x.EQUAL(x,hollywood)
Honorary :: N/N :: \x.EQUAL(x,honorary)
Hoover :: N :: \x.EQUAL(x,hoover)
Hospital :: N :: \x.EQUAL(x,hospital)
Hotel :: N :: \x.EQUAL(x,hotel)
House :: N :: \x.EQUAL(x,house)
House :: N/N :: \x.EQUAL(x,house)
Humphrey :: N/N :: \x.EQUAL(x,humphrey)
I :: N :: \x.EQUAL(x,_i)
II :: N :: \x.EQUAL(x,ii)
INF :: N/N :: \x.EQUAL(x,inf)
Iceland :: N :: \x.EQUAL(x,iceland)
Illinois :: N :: \x.EQUAL(x,illinois)
Immigration :: N/N :: \x.EQUAL(x,immigration)
In :: (S/S)/N :: \P Q y.exists z.(P(z) & Q(y) & in:1(y,y) & in:2(y,z))
Inaugural :: N/N :: \x.EQUAL(x,inaugural)
Independence :: N/N :: \x.EQUAL(x,independence)
Initiative :: N :: \x.EQUAL(x,initiative)
Institute :: N :: \x.EQUAL(x,institute)
IntermediateRange :: N/N :: \x.EQUAL(x,intermediaterange)
Investigative :: N/N :: \x.EQUAL(x,investigative)
Iran :: N :: \x.EQUAL(x,iran)
IranContra :: N/N :: \x.EQUAL(x,irancontra)
Iran–Contra :: N/N :: \x.EQUAL(x,iran–contra)
Iraq :: N :: \x.EQUAL(x,iraq)
Irish :: N/N :: \P y.(P(y) & irish(y))
Is :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & is:1(e,y) & is:2(e,z))
It :: N :: \x.EQUAL(x,it)
Italian :: N/N :: \x.EQUAL(x,italian)
Jack :: N :: \x.EQUAL(x,jack)
James :: N/N :: \x.EQUAL(x,james)
Jane :: N :: \x.EQUAL(x,jane)
Jane :: N/N :: \x.EQUAL(x,jane)
January :: N :: \x.EQUAL(x,january)
Jerry :: N/N :: \x.EQUAL(x,jerry)
Jimmy :: N/N :: \x.EQUAL(x,jimmy)
John :: N/N :: \x.EQUAL(x,john)
Johnson :: N :: \x.EQUAL(x,johnson)
July :: N/N :: \x.EQUAL(x,july)
June :: N/N :: \x.EQUAL(x,june)
June :: N :: \x.EQUAL(x,june)
June :: (N\N)/N :: \x.EQUAL(x,june)
Kaczyński :: N :: \x.EQUAL(x,kaczyński)
Karzai :: N :: \x.EQUAL(x,karzai)
Killers :: N :: \x.EQUAL(x,killers)
King :: N :: \x.EQUAL(x,king)
Kingdom :: N/N :: \x.EQUAL(x,kingdom)
Kings :: N/N :: \x.EQUAL(x,kings)
Kings :: N :: \x.kings(x)
Knighthood :: N :: \x.EQUAL(x,knighthood)
Knute :: N/N :: \x.EQUAL(x,knute)
Korean :: N/N :: \x.EQUAL(x,korean)
Korean :: N/N :: \P y.(P(y) & korean(y))
Lady :: N/N :: \x.EQUAL(x,lady)
Larry :: N/N :: \x.EQUAL(x,larry)
Laura :: N/N :: \x.EQUAL(x,laura)
Lech :: N/N :: \x.EQUAL(x,lech)
Lesley :: N/N :: \x.EQUAL(x,lesley)
Liberty :: N :: \x.EQUAL(x,liberty)
Library :: N :: \x.EQUAL(x,library)
Libya :: N/N :: \x.EQUAL(x,libya)
Libya :: N :: \x.EQUAL(x,libya)
Life :: N :: \x.EQUAL(x,life)
Lines :: N/N :: \x.EQUAL(x,lines)
London :: N :: \x.EQUAL(x,london)
Los :: N/N :: \x.EQUAL(x,los)
Love :: N :: \x.love(x)
Lyndon :: N/N :: \x.EQUAL(x,lyndon)
Many :: N/N :: \P y.(P(y) & many(y))
March :: N/N :: \x.EQUAL(x,march)
March :: ((S\N)\(S\N))/N :: \x.EQUAL(x,march)
Margaret :: N/N :: \x.EQUAL(x,margaret)
Maureen :: N/N :: \x.EQUAL(x,maureen)
May :: N/N :: \x.EQUAL(x,may)
May :: (N\N)/N :: \x.EQUAL(x,may)
McCarthy :: N :: \x.EQUAL(x,mccarthy)
Medal :: N :: \x.EQUAL(x,medal)
Meritorious :: N/N :: \x.EQUAL(x,meritorious)
Michael :: N/N :: \x.EQUAL(x,michael)
Mikhail :: N/N :: \x.EQUAL(x,mikhail)
Minister :: N/N :: \x.EQUAL(x,minister)
Minister :: N :: \x.EQUAL(x,minister)
Minneapolis :: N :: \x.EQUAL(x,minneapolis)
Minnesota :: N :: \x.EQUAL(x,minnesota)
Mondale :: N :: \x.EQUAL(x,mondale)
Monday :: N :: \x.EQUAL(x,monday)
Monmouth :: N :: \x.EQUAL(x,monmouth)
Months :: N :: \x.months(x)
Motion :: N/N :: \x.EQUAL(x,motion)
Mr :: N/N :: \x.EQUAL(x,mr)
Mrs :: N/N :: \x.EQUAL(x,mrs)
Mulroney :: N :: \x.EQUAL(x,mulroney)
My :: N/N :: \x.EQUAL(x,my)
NIS :: N :: \x.EQUAL(x,nis)
Nancy :: N/N :: \x.EQUAL(x,nancy)
Nancy :: N :: \x.EQUAL(x,nancy)
Nancy :: (S\N)/(S\N) :: \x.EQUAL(x,nancy)
Nancy :: (S\N)\(S\N) :: \x.EQUAL(x,nancy)
Nancy :: N\N :: \x.EQUAL(x,nancy)
National :: N/N :: \x.EQUAL(x,national)
Naval :: N/N :: \x.EQUAL(x,naval)
Navy :: N/N :: \x.EQUAL(x,navy)
Neil :: N :: \x.EQUAL(x,neil)
Nelle :: N/N :: \x.EQUAL(x,nelle)
Nelle :: N :: \x.EQUAL(x,nelle)
New :: N/N :: \x.EQUAL(x,new)
Nicaraguan :: N/N :: \P y.(P(y) & nicaraguan(y))
Nixon :: N :: \x.EQUAL(x,nixon)
November :: N :: \x.EQUAL(x,november)
Nuclear :: N/N :: \x.EQUAL(x,nuclear)
OConnor :: N :: \x.EQUAL(x,oconnor)
Obama :: N :: \x.EQUAL(x,obama)
October :: N :: \x.EQUAL(x,october)
Office :: N :: \x.EQUAL(x,office)
On :: (S/S)/N :: \P Q y.exists z.(P(z) & Q(y) & on:1(y,y) & on:2(y,z))
Order :: N :: \x.order(x)
Orlando :: N :: \x.EQUAL(x,orlando)
Oval :: N/N :: \x.EQUAL(x,oval)
Over :: (S/S)/N :: \P Q y.exists z.(P(z) & Q(y) & over:1(y,y) & over:2(y,z))
Parade :: N :: \x.EQUAL(x,parade)
Parkinson :: N :: \x.EQUAL(x,parkinson)
Parliament :: N :: \x.EQUAL(x,parliament)
Party :: N :: \x.EQUAL(x,party)
Party :: N/N :: \x.EQUAL(x,party)
Pat :: N/N :: \x.EQUAL(x,pat)
Picture :: N/N :: \x.EQUAL(x,picture)
Poland :: N :: \x.EQUAL(x,poland)
President :: N :: \x.EQUAL(x,president)
President :: N/N :: \x.EQUAL(x,president)
Presidential :: N/N :: \x.EQUAL(x,presidential)
Presidential :: N/N :: \P y.(P(y) & presidential(y))
Press :: N/N :: \x.EQUAL(x,press)
Prime :: N/N :: \x.EQUAL(x,prime)
Program :: N :: \x.EQUAL(x,program)
Protestant :: N :: \x.protestant(x)
Queen :: N/N :: \x.EQUAL(x,queen)
Radio :: N/N :: \x.EQUAL(x,radio)
Rancho :: N/N :: \x.EQUAL(x,rancho)
Reagan :: N :: \x.EQUAL(x,reagan)
Reagan :: N/N :: \x.EQUAL(x,reagan)
Reaganomics :: N :: \x.reaganomics(x)
Reaganomics :: N :: \x.EQUAL(x,reaganomics)
Reagans :: N :: \x.EQUAL(x,reagans)
Reagans :: N :: \x.reagans(x)
Referring :: (S\N)/PP :: \P y.(P(y) & referring:1(y,y))
Reform :: N :: \x.EQUAL(x,reform)
Report :: N :: \x.EQUAL(x,report)
Republican :: N :: \x.EQUAL(x,republican)
Republican :: N/N :: \P y.(P(y) & republican(y))
Republican :: N/N :: \x.EQUAL(x,republican)
Republicans :: N :: \x.republicans(x)
Research :: N/N :: \x.EQUAL(x,research)
Reverend :: N/N :: \x.EQUAL(x,reverend)
Reykjavík :: N/N :: \x.EQUAL(x,reykjavík)
Rice :: N :: \x.EQUAL(x,rice)
Richard :: N/N :: \x.EQUAL(x,richard)
Rockne :: N :: \x.EQUAL(x,rockne)
Roman :: N/N :: \x.EQUAL(x,roman)
Ronald :: N :: \x.EQUAL(x,ronald)
Ronald :: N/N :: \x.EQUAL(x,ronald)
Ronnie :: N :: \x.EQUAL(x,ronnie)
Roosevelt :: N :: \x.EQUAL(x,roosevelt)
Rosalynn :: N/N :: \x.EQUAL(x,rosalynn)
Rotunda :: N :: \x.EQUAL(x,rotunda)
Row :: N :: \x.EQUAL(x,row)
Row :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & row:1(e,y) & row:2(e,z))
San :: N/N :: \x.EQUAL(x,san)
Sandra :: N/N :: \x.EQUAL(x,sandra)
Santa :: N/N :: \x.EQUAL(x,santa)
Schröder :: N :: \x.EQUAL(x,schröder)
Scottish :: N/N :: \x.EQUAL(x,scottish)
Screen :: N/N :: \x.EQUAL(x,screen)
Secret :: N/N :: \x.EQUAL(x,secret)
Secretary :: N/N :: \x.EQUAL(x,secretary)
Seller :: N :: \x.EQUAL(x,seller)
September :: N :: \x.EQUAL(x,september)
Service :: N/N :: \x.EQUAL(x,service)
Service :: N :: \x.EQUAL(x,service)
She :: N :: \x.EQUAL(x,she)
Shuttle :: N/N :: \x.EQUAL(x,shuttle)
Silvio :: N/N :: \x.EQUAL(x,silvio)
Since :: (S/S)/N :: \P Q y.exists z.(P(z) & Q(y) & since:1(y,y) & since:2(y,z))
Soon :: S/S :: \P y.(P(y) & soon(y))
Soon :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & soon(y))
Soviet :: N/N :: \x.EQUAL(x,soviet)
Soviets :: N :: \x.EQUAL(x,soviets)
Space :: N/N :: \x.EQUAL(x,space)
Special :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & special:1(e,y) & special:2(e,z))
Special :: N/N :: \P y.(P(y) & special(y))
Square :: N :: \x.EQUAL(x,square)
Stahl :: N/N :: \x.EQUAL(x,stahl)
Star :: N/N :: \x.EQUAL(x,star)
Starr :: N/N :: \x.EQUAL(x,starr)
State :: N :: \x.state(x)
State :: N :: \x.EQUAL(x,state)
States :: N/N :: \x.EQUAL(x,states)
States :: N :: \x.EQUAL(x,states)
Station :: N/N :: \x.EQUAL(x,station)
Statuary :: N/N :: \x.EQUAL(x,statuary)
Statue :: N :: \x.EQUAL(x,statue)
Strategic :: N/N :: \x.EQUAL(x,strategic)
Summit :: N :: \x.EQUAL(x,summit)
Supreme :: N/N :: \x.EQUAL(x,supreme)
Tampico :: N :: \x.EQUAL(x,tampico)
Teflon :: N/N :: \x.EQUAL(x,teflon)
Thank :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & thank:1(e,y) & thank:2(e,z))
Thatcher :: N :: \x.EQUAL(x,thatcher)
Theater :: N :: \x.EQUAL(x,theater)
Their :: N/N :: \x.EQUAL(x,their)
They :: N :: \x.EQUAL(x,they)
Thomas :: N/N :: \x.EQUAL(x,thomas)
Throughout :: (S/S)/N :: \P Q y.exists z.(P(z) & Q(y) & throughout:1(y,y) & throughout:2(y,z))
Time :: N :: \x.time(x)
Times :: N/N :: \x.EQUAL(x,times)
Timothy :: N/N :: \x.EQUAL(x,timothy)
Tony :: N/N :: \x.EQUAL(x,tony)
Tower :: N/N :: \x.EQUAL(x,tower)
Trail :: N :: \x.EQUAL(x,trail)
Treaty :: N :: \x.EQUAL(x,treaty)
Two :: N/N :: \P y.(P(y) & COUNT(y,two))
US :: N/N :: \x.EQUAL(x,us)
US :: N :: \x.EQUAL(x,us)
USS :: N/N :: \x.EQUAL(x,uss)
Union :: N/N :: \x.EQUAL(x,union)
Union :: N :: \x.EQUAL(x,union)
Unit :: N :: \x.EQUAL(x,unit)
United :: N/N :: \x.EQUAL(x,united)
University :: N/N :: \x.EQUAL(x,university)
Very :: N :: \x.EQUAL(x,very)
Vice :: N/N :: \x.EQUAL(x,vice)
Victory :: N :: \x.EQUAL(x,victory)
Voodoo :: N/N :: \x.EQUAL(x,voodoo)
W :: N/N :: \x.EQUAL(x,_w)
Wall :: N :: \x.EQUAL(x,wall)
Walter :: N/N :: \x.EQUAL(x,walter)
War :: N/N :: \x.EQUAL(x,war)
War :: N :: \x.EQUAL(x,war)
Wars :: N :: \x.EQUAL(x,wars)
Warsaw :: N :: \x.EQUAL(x,warsaw)
Washington :: N/N :: \x.EQUAL(x,washington)
Washington :: N :: \x.EQUAL(x,washington)
Wałęsa :: N :: \x.EQUAL(x,wałęsa)
We :: N :: \x.EQUAL(x,we)
While :: (S/S)/S :: \P Q y.exists z.(P(z) & Q(y) & while:1(y,y) & while:2(y,z))
White :: N/N :: \x.EQUAL(x,white)
William :: N/N :: \x.EQUAL(x,william)
Wilson :: N/N :: \x.EQUAL(x,wilson)
World :: N/N :: \x.EQUAL(x,world)
Wyman :: N :: \x.EQUAL(x,wyman)
York :: N/N :: \x.EQUAL(x,york)
You :: N :: \x.EQUAL(x,you)
able :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & able(e))
aboard :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & aboard:1(y,z) & aboard:2(y,y) & aboard:3(y,w))
aboard :: (N\N)/N :: \P Q y.exists z.(P(z) & Q(y) & aboard:1(y,y) & aboard:2(y,z))
about :: (N\N)/N :: \P Q y.exists z.(P(z) & Q(y) & about:1(y,y) & about:2(y,z))
about :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & about:1(y,z) & about:2(y,y) & about:3(y,w))
about :: (N\N)/(S\N) :: \P Q y.exists z.(P(z) & Q(y) & about:1(y,y) & about:2(y,z))
about :: PP/N :: \P e.exists y.(P(y) & about:1(e,y))
about :: N/N :: \P y.(P(y) & about:1(y,y))
accept :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & accept:1(e,y) & accept:2(e,z))
access :: N :: \x.access(x)
across :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & across:1(y,z) & across:2(y,y) & across:3(y,w))
act :: N :: \x.act(x)
acting :: N/N :: \P y.(P(y) & acting(y))
acting :: N/N :: \P y.(P(y) & acting:1(y,y))
acting :: S\N :: \P e.exists y.(P(y) & acting:1(e,y))
active :: N/N :: \P y.(P(y) & active(y))
active :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & active(e))
active :: S\N :: \P e.exists y.(P(y) & active(e))
activities :: N :: \x.activities(x)
actor :: N :: \x.actor(x)
actors :: N :: \x.actors(x)
actress :: N/N :: \x.actress(x)
added :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & added:1(e,y) & added:2(e,z))
address :: N :: \x.address(x)
address :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & address:1(e,y) & address:2(e,z))
addressed :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & addressed:1(e,y) & addressed:2(e,z))
addressing :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & addressing:1(e,y) & addressing:2(e,z))
administration :: N :: \x.administration(x)
admire :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & admire:1(e,y) & admire:2(e,z))
admired :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & admired:1(e,y) & admired:2(e,z))
admired :: S\N :: \P e.exists y.(P(y) & admired:1(e,y))
advance :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & advance:1(e,y) & advance:2(e,z))
advance :: N :: \x.advance(x)
advocate :: N :: \x.advocate(x)
affair :: N :: \x.affair(x)
affected :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & affected:1(e,y) & affected:2(e,z))
afflicted :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & afflicted:1(e,y) & afflicted:2(e,z))
after :: ((S\N)\(S\N))/(S\N) :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & after:1(y,z) & after:2(y,y) & after:3(y,w))
after :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & after:1(y,z) & after:2(y,y) & after:3(y,w))
after :: ((S\N)\(S\N))/S :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & after:1(y,z) & after:2(y,y) & after:3(y,w))
after :: (S/S)/S :: \P Q y.exists z.(P(z) & Q(y) & after:1(y,y) & after:2(y,z))
afterwards :: (S\N)/S :: \P Q e.exists z y.(P(z) & Q(y) & afterwards:1(e,y) & afterwards:2(e,z))
afterwards :: N :: \x.afterwards(x)
again :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & again(y))
again :: ((S\N)\(S\N))/((S\N)\(S\N)) :: \P Q R y.exists z.(P & Q & R(z) & again(y))
against :: PP/N :: \P e.exists y.(P(y) & against:1(e,y))
against :: (N\N)/N :: \P Q y.exists z.(P(z) & Q(y) & against:1(y,y) & against:2(y,z))
against :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & against:1(y,z) & against:2(y,y) & against:3(y,w))
age :: N :: \x.age(x)
agent :: N/N :: \x.agent(x)
ago :: (S/S)\N :: \P Q y.exists z.(P(z) & Q(y) & ago:1(y,y) & ago:2(y,z))
agreed :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & agreed:1(e,y) & agreed:2(e,z))
ahead :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & ahead(y))
aid :: N :: \x.aid(x)
airline :: N/N :: \x.airline(x)
alYawer :: N :: \x.EQUAL(x,alyawer)
alertness :: N :: \x.alertness(x)
allowed :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & allowed:1(e,y) & allowed:2(e,z))
allowed :: S\N :: \P e.exists y.(P(y) & allowed:1(e,y))
also :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & also(y))
also :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & also(y))
although :: ((S\N)\(S\N))/S :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & although:1(y,z) & although:2(y,y) & although:3(y,w))
always :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & always(y))
am :: (S\N)/N :: \P Q y.exists x.(Q(x) & P(x))
among :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & among:1(y,z) & among:2(y,y) & among:3(y,w))
amount :: N :: \x.amount(x)
amputee :: N :: \x.amputee(x)
an :: N/N :: None
and :: conj :: \P Q x.(P(x) & Q(x))
angry :: S\N :: \P e.exists y.(P(y) & angry(e))
announcer :: N :: \x.announcer(x)
announcing :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & announcing:1(e,y) & announcing:2(e,z))
answered :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & answered:1(e,y) & answered:2(e,z))
anticommunist :: N/N :: \P y.(P(y) & anticommunist(y))
apartment :: N/N :: \x.apartment(x)
apology :: N :: \x.apology(x)
appearances :: N :: \x.appearances(x)
appeared :: S\N :: \P e.exists y.(P(y) & appeared:1(e,y))
approved :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & approved:1(e,y) & approved:2(e,z))
are :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & are:1(e,y) & are:2(e,z))
arms :: N :: \x.arms(x)
around :: S\N :: \P e.exists y.(P(y) & around(e))
arrived :: S\N :: \P e.exists y.(P(y) & arrived:1(e,y))
as :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & as(y))
as :: PP/N :: \P e.exists y.(P(y) & as:1(e,y))
as :: PP/N :: \P Q y.exists z.(P(y) & Q(z) & as:1(y,z) & as:2(y,y))
as :: ((S\N)\(S\N))/S :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & as:1(y,z) & as:2(y,y) & as:3(y,w))
as :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & as:1(y,z) & as:2(y,y) & as:3(y,w))
as :: ((S\N)\(S\N))/((S\N)\(S\N)) :: \P Q R y.exists z.(P & Q & R(z) & as(y))
as :: (N\N)/N :: \P Q y.exists z.(P(z) & Q(y) & as:1(y,y) & as:2(y,z))
as :: (N\N)/N :: \P e.exists y.(P(y) & as:1(e,y))
assassination :: N/N :: \x.assassination(x)
assigned :: S\N :: \P e.exists y.(P(y) & assigned:1(e,y))
at :: PP/(S\N) :: \P e.exists y.(P(y) & at:1(e,y))
at :: (S/S)/N :: \P Q y.exists z.(P(z) & Q(y) & at:1(y,y) & at:2(y,z))
at :: (N\N)/N :: \P Q y.exists z.(P(z) & Q(y) & at:1(y,y) & at:2(y,z))
at :: (N\N)/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & at:1(y,z) & at:2(y,y) & at:3(y,w))
at :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & at:1(y,z) & at:2(y,y) & at:3(y,w))
at :: PP/N :: \P e.exists y.(P(y) & at:1(e,y))
ate :: N/N :: \P y.(P(y) & ate(y))
athletic :: S\N :: \P e.exists y.(P(y) & athletic(e))
attack :: N :: \x.attack(x)
attempt :: N :: \x.attempt(x)
attempts :: N :: \x.attempts(x)
attend :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & attend:1(e,y) & attend:2(e,z))
attend :: S\N :: \P e.exists y.(P(y) & attend:1(e,y))
attendance :: N :: \x.attendance(x)
attended :: S\N :: \P e.exists y.(P(y) & attended:1(e,y))
authority :: N :: \x.authority(x)
autobiography :: N :: \x.autobiography(x)
available :: S\N :: \P e.exists y.(P(y) & available(e))
award :: N :: \x.award(x)
awarded :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & awarded:1(e,y) & awarded:2(e,z))
away :: ((S\N)\(S\N))/PP :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & away(y))
back :: N :: \x.back(x)
back :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & back(y))
bad :: N/N :: \P y.(P(y) & bad(y))
badly :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & badly(y))
balance :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & balance:1(e,y) & balance:2(e,z))
ballot :: N :: \x.ballot(x)
banned :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & banned:1(e,y) & banned:2(e,z))
baseball :: N/N :: \x.baseball(x)
based :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & based:1(e,y) & based:2(e,z))
battle :: N :: \x.battle(x)
be :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & be:1(e,y) & be:2(e,z))
be :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & be:1(e,y) & be:2(e,z))
beaches :: N :: \x.beaches(x)
became :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & became:1(e,y) & became:2(e,z))
became :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & became:1(e,y) & became:2(e,z))
because :: ((S\N)\(S\N))/PP :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & because:1(y,z) & because:2(y,y) & because:3(y,w))
because :: ((S\N)\(S\N))/S :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & because:1(y,z) & because:2(y,y) & because:3(y,w))
become :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & become:1(e,y) & become:2(e,z))
becoming :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & becoming:1(e,y) & becoming:2(e,z))
becoming :: (S\N)/N :: \P Q y.exists z.(P(y) & Q(z) & becoming:1(y,z) & becoming:2(y,y))
been :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & been:1(e,y) & been:2(e,z))
before :: ((S\N)\(S\N))/(S\N) :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & before:1(y,z) & before:2(y,y) & before:3(y,w))
before :: ((S\N)\(S\N))/S :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & before:1(y,z) & before:2(y,y) & before:3(y,w))
before :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & before:1(y,z) & before:2(y,y) & before:3(y,w))
began :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & began:1(e,y) & began:2(e,z))
began :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & began:1(e,y) & began:2(e,z))
begin :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & begin:1(e,y) & begin:2(e,z))
behalf :: N :: \x.behalf(x)
being :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & being:1(e,y) & being:2(e,z))
being :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & being:1(e,y) & being:2(e,z))
being :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & being:1(e,y) & being:2(e,z))
believe :: (S\N)/S :: \P Q e.exists z y.(P(z) & Q(y) & believe:1(e,y) & believe:2(e,z))
believed :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & believed:1(e,y) & believed:2(e,z))
believed :: (S\N)/S :: \P Q e.exists z y.(P(z) & Q(y) & believed:1(e,y) & believed:2(e,z))
believed :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & believed:1(e,y) & believed:2(e,z))
believes :: (S\N)/S :: \P Q e.exists z y.(P(z) & Q(y) & believes:1(e,y) & believes:2(e,z))
benefits :: N :: \x.benefits(x)
best :: N/N :: \P y.(P(y) & best(y))
between :: (N\N)/N :: \P Q y.exists z.(P(z) & Q(y) & between:1(y,y) & between:2(y,z))
between :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & between:1(y,z) & between:2(y,y) & between:3(y,w))
between :: PP/N :: \P e.exists y.(P(y) & between:1(e,y))
big :: S\N :: \P e.exists y.(P(y) & big(e))
big :: N/N :: \P y.(P(y) & big(y))
bills :: N :: \x.bills(x)
birthday :: N :: \x.birthday(x)
bless :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & bless(y))
blood :: N :: \x.blood(x)
bombing :: N :: \x.bombing(x)
bone :: N :: \x.bone(x)
born :: S\N :: \P e.exists y.(P(y) & born:1(e,y))
born :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & born:1(e,y) & born:2(e,z))
borrow :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & borrow:1(e,y) & borrow:2(e,z))
bright :: N/N :: \P y.(P(y) & bright(y))
broadcaster :: N :: \x.broadcaster(x)
broken :: N/N :: \P y.(P(y) & broken(y))
brother :: N :: \x.brother(x)
brought :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & brought:1(e,y) & brought:2(e,z))
budget :: N :: \x.budget(x)
building :: N :: \x.building(x)
buildup :: N :: \x.buildup(x)
built :: S\N :: \P e.exists y.(P(y) & built:1(e,y))
bullet :: N :: \x.bullet(x)
bullets :: N :: \x.bullets(x)
buried :: S\N :: \P e.exists y.(P(y) & buried:1(e,y))
businesses :: N :: \x.businesses(x)
businesspeople :: N :: \x.businesspeople(x)
but :: conj :: \P Q x.(P(x) & Q(x))
by :: ((S\N)\(S\N))/(S\N) :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & by:1(y,z) & by:2(y,y) & by:3(y,w))
by :: (N\N)/N :: \P Q y.exists z.(P(z) & Q(y) & by:1(y,y) & by:2(y,z))
by :: ((S\N)/(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & by:1(y,z) & by:2(y,y) & by:3(y,w))
by :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & by:1(y,z) & by:2(y,y) & by:3(y,w))
cadet :: N :: \x.cadet(x)
called :: ((S\N)/N)/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & called:1(e,y) & called:2(e,z) & called:3(e,w))
called :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & called:1(e,y) & called:2(e,z))
campaign :: N :: \x.campaign(x)
campaign :: N/N :: \x.campaign(x)
cancer :: N :: \x.cancer(x)
candidate :: N/N :: \x.candidate(x)
capable :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & capable(e))
capacity :: N :: \x.capacity(x)
capital :: N :: \x.capital(x)
care :: N :: \x.care(x)
career :: N :: \x.career(x)
carried :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & carried:1(e,y) & carried:2(e,z))
casket :: N :: \x.casket(x)
cause :: N :: \x.cause(x)
cause :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & cause:1(e,y) & cause:2(e,z))
caused :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & caused:1(e,y) & caused:2(e,z))
cell :: N/N :: \x.cell(x)
centenary :: N :: \x.centenary(x)
center :: N :: \x.center(x)
ceremony :: N :: \x.ceremony(x)
challenging :: (S\N)/N :: \P Q y.exists z.(P(y) & Q(z) & challenging:1(y,z) & challenging:2(y,y))
change :: N :: \x.change(x)
changed :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & changed:1(e,y) & changed:2(e,z))
changes :: N :: \x.changes(x)
chest :: N :: \x.chest(x)
child :: N :: \x.child(x)
children :: N :: \x.children(x)
choice :: N :: \x.choice(x)
choose :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & choose:1(e,y) & choose:2(e,z))
christened :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & christened:1(e,y) & christened:2(e,z))
citizens :: N :: \x.citizens(x)
civilian :: N/N :: \P y.(P(y) & civilian(y))
class :: N :: \x.class(x)
close :: N/N :: \P y.(P(y) & close(y))
close :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & close(e))
coalitionists :: N :: \x.coalitionists(x)
collapse :: N :: \x.collapse(x)
college :: N/N :: \x.college(x)
colon :: N/N :: \x.colon(x)
come :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & come:1(e,y) & come:2(e,z))
come :: S\N :: \P e.exists y.(P(y) & come:1(e,y))
coming :: S\N :: \P e.exists y.(P(y) & coming:1(e,y))
commanding :: N/N :: \P y.(P(y) & commanding(y))
commission :: N :: \x.commission(x)
communism :: N :: \x.communism(x)
communist :: N/N :: \P y.(P(y) & communist(y))
communists :: N :: \x.communists(x)
complication :: N :: \x.complication(x)
conservative :: N/N :: \P y.(P(y) & conservative(y))
conservatives :: N :: \x.conservatives(x)
controversial :: S\N :: \P e.exists y.(P(y) & controversial(e))
correspondent :: N/N :: \x.correspondent(x)
country :: N :: \x.country(x)
countrymen :: N/S :: \x.countrymen(x)
coup :: N :: \x.coup(x)
couple :: N :: \x.couple(x)
create :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & create:1(e,y) & create:2(e,z))
created :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & created:1(e,y) & created:2(e,z))
credit :: N :: \x.credit(x)
crew :: N :: \x.crew(x)
crime :: N :: \x.crime(x)
critic :: N/N :: \x.critic(x)
criticism :: N :: \x.criticism(x)
criticized :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & criticized:1(e,y) & criticized:2(e,z))
critics :: N :: \x.critics(x)
cure :: N :: \x.cure(x)
cut :: N/N :: \x.cut(x)
darkness :: N :: \x.darkness(x)
daughter :: N :: \x.daughter(x)
dawn :: N :: \x.dawn(x)
day :: N :: \x.day(x)
days :: N :: \x.days(x)
death :: N :: \x.death(x)
decided :: (S\N)/S :: \P Q e.exists z y.(P(z) & Q(y) & decided:1(e,y) & decided:2(e,z))
declared :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & declared:1(e,y) & declared:2(e,z))
decline :: N :: \x.decline(x)
decreased :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & decreased:1(e,y) & decreased:2(e,z))
dedicated :: S\N :: \P e.exists y.(P(y) & dedicated:1(e,y))
defeated :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & defeated:1(e,y) & defeated:2(e,z))
defense :: N/N :: \x.defense(x)
del :: N/N :: \x.EQUAL(x,del)
delivered :: S\N :: \P e.exists y.(P(y) & delivered:1(e,y))
delivered :: ((S\N)/PP)/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & delivered:1(e,y) & delivered:2(e,z) & delivered:3(e,w))
departments :: N :: \x.departments(x)
descent :: N :: \x.descent(x)
described :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & described:1(e,y) & described:2(e,z))
destiny :: N :: \x.destiny(x)
destroy :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & destroy:1(e,y) & destroy:2(e,z))
destroyed :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & destroyed:1(e,y) & destroyed:2(e,z))
detente :: N :: \x.detente(x)
diagnosed :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & diagnosed:1(e,y) & diagnosed:2(e,z))
diagnosis :: N :: \x.diagnosis(x)
diary :: N :: \x.diary(x)
did :: ((S\N)/(S\N))/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & did:1(e,y) & did:2(e,z) & did:3(e,w))
did :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & did:1(e,y) & did:2(e,z))
died :: S\N :: \P e.exists y.(P(y) & died:1(e,y))
different :: N/N :: \P y.(P(y) & different(y))
difficult :: N/N :: \P y.(P(y) & difficult(y))
directed :: ((S\N)/PP)/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & directed:1(e,y) & directed:2(e,z) & directed:3(e,w))
disease :: N :: \x.disease(x)
display :: N :: \x.display(x)
divided :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & divided:1(e,y) & divided:2(e,z))
divorced :: S\N :: \P e.exists y.(P(y) & divorced:1(e,y))
do :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & do:1(e,y) & do:2(e,z))
do :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & do:1(e,y) & do:2(e,z))
doctors :: N :: \x.doctors(x)
doddering :: N/N :: \P y.(P(y) & doddering:1(y,y))
doing :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & doing:1(e,y) & doing:2(e,z))
done :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & done:1(e,y) & done:2(e,z))
double :: N/N :: \P y.(P(y) & double(y))
down :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & down(y))
dramatically :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & dramatically(y))
due :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & due(e))
during :: (N\N)/N :: \P Q y.exists z.(P(z) & Q(y) & during:1(y,y) & during:2(y,z))
during :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & during:1(y,z) & during:2(y,y) & during:3(y,w))
duty :: N :: \x.duty(x)
ear :: N :: \x.ear(x)
earth :: N :: \x.earth(x)
eastern :: N/N :: \P y.(P(y) & eastern(y))
economic :: N/N :: \P y.(P(y) & economic(y))
economics :: N :: \x.economics(x)
economy :: N :: \x.economy(x)
edited :: N/N :: \P y.(P(y) & edited:1(y,y))
educational :: N/N :: \P y.(P(y) & educational(y))
elected :: S\N :: \P e.exists y.(P(y) & elected:1(e,y))
elected :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & elected:1(e,y) & elected:2(e,z))
elected :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & elected:1(e,y) & elected:2(e,z))
election :: N :: \x.election(x)
elections :: N :: \x.elections(x)
electoral :: N/N :: \P y.(P(y) & electoral(y))
embryonic :: N/N :: \P y.(P(y) & embryonic(y))
empire :: N :: \x.empire(x)
end :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & end:1(e,y) & end:2(e,z))
end :: N :: \x.end(x)
ended :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & ended:1(e,y) & ended:2(e,z))
ending :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & ending:1(e,y) & ending:2(e,z))
endorsed :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & endorsed:1(e,y) & endorsed:2(e,z))
engagement :: N :: \x.engagement(x)
enjoyed :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & enjoyed:1(e,y) & enjoyed:2(e,z))
enlarged :: N/N :: \P y.(P(y) & enlarged(y))
entire :: N/N :: \P y.(P(y) & entire(y))
entitled :: (S\N)/N :: \P Q y.exists z.(P(y) & Q(z) & entitled:1(y,z) & entitled:2(y,y))
eulogies :: N :: \x.eulogies(x)
even :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & even(y))
even :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & even(y))
event :: N :: \x.event(x)
ever :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & ever(y))
evidence :: N/S :: \x.evidence(x)
evidence :: N :: \x.evidence(x)
executives :: N :: \x.executives(x)
experts :: N :: \x.experts(x)
exploded :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & exploded:1(e,y) & exploded:2(e,z))
faced :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & faced:1(e,y) & faced:2(e,z))
facts :: N :: \x.facts(x)
failed :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & failed:1(e,y) & failed:2(e,z))
faithless :: N/N :: \P y.(P(y) & faithless(y))
fall :: N :: \x.fall(x)
family :: N :: \x.family(x)
famous :: N/N :: \P y.(P(y) & famous(y))
famously :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & famously(y))
fan :: N/N :: \x.fan(x)
far :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & far(y))
fast :: N/N :: \P y.(P(y) & fast(y))
father :: N :: \x.father(x)
fault :: N :: \x.fault(x)
favorite :: N/N :: \P y.(P(y) & favorite(y))
federal :: N/N :: \P y.(P(y) & federal(y))
feel :: (S\N)/(S\N) :: \P y.(P(y) & feel:1(y,y))
felt :: (S\N)/S :: \P Q e.exists z y.(P(z) & Q(y) & felt:1(e,y) & felt:2(e,z))
few :: N/N :: \P y.(P(y) & few(y))
fifth :: N :: \x.fifth(x)
final :: N/N :: \P y.(P(y) & final(y))
finally :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & finally(y))
find :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & find:1(e,y) & find:2(e,z))
fine :: S\N :: \P e.exists y.(P(y) & fine(e))
finished :: S\N :: \P e.exists y.(P(y) & finished:1(e,y))
fired :: S\N :: \P e.exists y.(P(y) & fired:1(e,y))
fired :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & fired:1(e,y) & fired:2(e,z))
first :: N/N :: \P y.(P(y) & first(y))
first :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & first(y))
following :: N/N :: \P y.(P(y) & following(y))
for :: ((S\N)\(S\N))/(S\N) :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & for:1(y,z) & for:2(y,y) & for:3(y,w))
for :: PP/(S\N) :: \P e.exists y.(P(y) & for:1(e,y))
for :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & for:1(y,z) & for:2(y,y) & for:3(y,w))
for :: (N\N)/N :: \P Q y.exists z.(P(z) & Q(y) & for:1(y,y) & for:2(y,z))
for :: (N\N)/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & for:1(y,z) & for:2(y,y) & for:3(y,w))
for :: PP/N :: \P e.exists y.(P(y) & for:1(e,y))
for :: (S/S)/N :: \P Q y.exists z.(P(z) & Q(y) & for:1(y,y) & for:2(y,z))
foreign :: N/N :: \P y.(P(y) & foreign(y))
forgotten :: S\N :: \P e.exists y.(P(y) & forgotten:1(e,y))
former :: N/N :: \P y.(P(y) & former(y))
four :: N/N :: \P y.(P(y) & COUNT(y,four))
fracture :: N :: \x.fracture(x)
frail :: N/N :: \P y.(P(y) & frail(y))
free :: N/N :: \P y.(P(y) & free(y))
freedom :: N :: \x.freedom(x)
frequent :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & frequent(e))
friendly :: S\N :: \P e.exists y.(P(y) & friendly(e))
friends :: N :: \x.friends(x)
friendship :: N :: \x.friendship(x)
from :: (N\N)/N :: \P Q y.exists z.(P(z) & Q(y) & from:1(y,y) & from:2(y,z))
from :: (((S\N)\(S\N))/((S\N)\(S\N)))/N :: \P Q R S y.exists v z.(P(v) & Q & R & S(z) & from:1(y,z) & from:2(y,v))
from :: PP/N :: \P e.exists y.(P(y) & from:1(e,y))
from :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & from:1(y,z) & from:2(y,y) & from:3(y,w))
funding :: N :: \x.funding(x)
funeral :: N :: \x.funeral(x)
gained :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & gained:1(e,y) & gained:2(e,z))
games :: N :: \x.games(x)
gate :: N :: \x.gate(x)
gave :: ((S\N)/N)/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & gave:1(e,y) & gave:2(e,z) & gave:3(e,w))
gave :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & gave:1(e,y) & gave:2(e,z))
generation :: N :: \x.generation(x)
get :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & get:1(e,y) & get:2(e,z))
give :: ((S\N)/PP)/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & give:1(e,y) & give:2(e,z) & give:3(e,w))
give :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & give:1(e,y) & give:2(e,z))
gives :: ((S\N)/N)/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & gives:1(e,y) & gives:2(e,z) & gives:3(e,w))
giving :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & giving:1(e,y) & giving:2(e,z))
go :: S\N :: \P e.exists y.(P(y) & go:1(e,y))
go :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & go:1(e,y) & go:2(e,z))
golf :: N :: \x.golf(x)
gonzo :: N :: \x.gonzo(x)
good :: N/N :: \P y.(P(y) & good(y))
good :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & good(e))
got :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & got:1(e,y) & got:2(e,z))
government :: N/N :: \x.government(x)
government :: N :: \x.government(x)
governor :: N :: \x.governor(x)
graduated :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & graduated:1(e,y) & graduated:2(e,z))
granted :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & granted:1(e,y) & granted:2(e,z))
greatest :: N/N :: \P y.(P(y) & greatest(y))
group :: N :: \x.group(x)
growth :: N :: \x.growth(x)
guest :: N :: \x.guest(x)
had :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & had:1(e,y) & had:2(e,z))
had :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & had:1(e,y) & had:2(e,z))
happened :: S\N :: \P e.exists y.(P(y) & happened:1(e,y))
has :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & has:1(e,y) & has:2(e,z))
have :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & have:1(e,y) & have:2(e,z))
have :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & have:1(e,y) & have:2(e,z))
having :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & having:1(e,y) & having:2(e,z))
he :: N :: \x.EQUAL(x,he)
head :: N :: \x.head(x)
health :: N/N :: \x.health(x)
health :: N :: \x.health(x)
hearing :: N/N :: \x.hearing(x)
heart :: N :: \x.heart(x)
held :: S\N :: \P e.exists y.(P(y) & held:1(e,y))
held :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & held:1(e,y) & held:2(e,z))
helicopter :: N :: \x.helicopter(x)
help :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & help:1(e,y) & help:2(e,z))
help :: ((S\N)/PP)/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & help:1(e,y) & help:2(e,z) & help:3(e,w))
helped :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & helped:1(e,y) & helped:2(e,z))
helped :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & helped:1(e,y) & helped:2(e,z))
her :: N/N :: \x.EQUAL(x,her)
here :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & here(y))
hero :: N :: \x.hero(x)
hide :: S\N :: \P e.exists y.(P(y) & hide:1(e,y))
high :: N/N :: \P y.(P(y) & high(y))
high :: S\N :: \P e.exists y.(P(y) & high(e))
highest :: N/N :: \P y.(P(y) & highest(y))
him :: N :: \x.EQUAL(x,him)
hip :: N :: \x.hip(x)
hiring :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & hiring:1(e,y) & hiring:2(e,z))
his :: N/N :: \x.EQUAL(x,his)
history :: N :: \x.history(x)
home :: (S\N)\(S\N) :: \x.home(x)
home :: N/N :: \x.home(x)
home :: N :: \x.home(x)
honor :: N :: \x.honor(x)
honorable :: N/N :: \P y.(P(y) & honorable(y))
honored :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & honored:1(e,y) & honored:2(e,z))
honored :: S\N :: \P e.exists y.(P(y) & honored:1(e,y))
hope :: N :: \x.hope(x)
hospital :: N :: \x.hospital(x)
hostages :: N :: \x.hostages(x)
hosted :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & hosted:1(e,y) & hosted:2(e,z))
hotel :: N :: \x.hotel(x)
house :: N :: \x.house(x)
human :: N/N :: \P y.(P(y) & human(y))
humanity :: N :: \x.humanity(x)
hurt :: S\N :: \P e.exists y.(P(y) & hurt:1(e,y))
husband :: N :: \x.husband(x)
idea :: N :: \x.idea(x)
if :: ((S\N)/(S\N))/S :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & if:1(y,z) & if:2(y,y) & if:3(y,w))
if :: ((S\N)\(S\N))/S :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & if:1(y,z) & if:2(y,y) & if:3(y,w))
illegally :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & illegally(y))
immigrants :: N :: \x.immigrants(x)
improve :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & improve:1(e,y) & improve:2(e,z))
in :: (S/S)/N :: \P Q y.exists z.(P(z) & Q(y) & in:1(y,y) & in:2(y,z))
in :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & in:1(y,z) & in:2(y,y) & in:3(y,w))
in :: PP/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & in:1(y,z) & in:2(y,y) & in:3(y,w))
in :: PP/N :: \P e.exists y.(P(y) & in:1(e,y))
in :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & in:1(y,z) & in:2(y,y))
in :: (N\N)/N :: \P Q y.exists z.(P(z) & Q(y) & in:1(y,y) & in:2(y,z))
in :: (N\N)/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & in:1(y,z) & in:2(y,y) & in:3(y,w))
in :: (N\N)/(S\N) :: \P Q y.exists z.(P(z) & Q(y) & in:1(y,y) & in:2(y,z))
inaugurated :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & inaugurated:1(e,y) & inaugurated:2(e,z))
inaugurated :: S\N :: \P e.exists y.(P(y) & inaugurated:1(e,y))
inch :: N :: \x.inch(x)
including :: (N\N)/N :: \P Q y.exists z.(P(z) & Q(y) & including:1(y,y) & including:2(y,z))
income :: N/N :: \x.income(x)
increase :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & increase:1(e,y) & increase:2(e,z))
increases :: N :: \x.increases(x)
individuals :: N :: \x.individuals(x)
inflation :: N :: \x.inflation(x)
innocent :: N/N :: \P y.(P(y) & innocent(y))
instead :: ((S\N)\(S\N))/PP :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & instead:1(y,z) & instead:2(y,y) & instead:3(y,w))
institution :: N :: \x.institution(x)
intelligence :: N/N :: \x.intelligence(x)
intend :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & intend:1(e,y) & intend:2(e,z))
intentions :: N :: \x.intentions(x)
interesting :: S\N :: \P e.exists y.(P(y) & interesting(e))
interfere :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & interfere:1(e,y) & interfere:2(e,z))
interim :: N/N :: \P y.(P(y) & interim(y))
into :: PP/N :: \P e.exists y.(P(y) & into:1(e,y))
into :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & into:1(y,z) & into:2(y,y) & into:3(y,w))
into :: (N\N)/N :: \P Q y.exists z.(P(z) & Q(y) & into:1(y,y) & into:2(y,z))
introduced :: S\N :: \P e.exists y.(P(y) & introduced:1(e,y))
invasion :: N :: \x.invasion(x)
is :: (S\N)/S :: \P Q e.exists z y.(P(z) & Q(y) & is:1(e,y) & is:2(e,z))
is :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & is:1(e,y) & is:2(e,z))
is :: (S\N)/(S\N) :: \P Q y.exists x.(Q(x) & P(x))
is :: (S\N)/N :: \P Q y.exists x.(Q(x) & P(x))
is :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & is:1(e,y) & is:2(e,z))
it :: N :: \x.EQUAL(x,it)
jobs :: N :: \x.jobs(x)
journey :: N :: \x.journey(x)
just :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & just(y))
just :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & just(y))
justice :: N/N :: \x.justice(x)
keep :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & keep:1(e,y) & keep:2(e,z))
killed :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & killed:1(e,y) & killed:2(e,z))
killed :: S\N :: \P e.exists y.(P(y) & killed:1(e,y))
killing :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & killing:1(e,y) & killing:2(e,z))
know :: (S\N)/S :: \P Q e.exists z y.(P(z) & Q(y) & know:1(e,y) & know:2(e,z))
know :: S\N :: \P e.exists y.(P(y) & know:1(e,y))
know :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & know:1(e,y) & know:2(e,z))
known :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & known:1(e,y) & known:2(e,z))
ladies :: N/N :: \x.ladies(x)
landslide :: N/N :: \x.landslide(x)
largest :: N/N :: \P y.(P(y) & largest(y))
last :: N/N :: \P y.(P(y) & last(y))
last :: S\N :: \P e.exists y.(P(y) & last:1(e,y))
late :: N/N :: \P y.(P(y) & late(y))
later :: S\N :: \P e.exists y.(P(y) & later(e))
later :: ((S\N)\(S\N))/((S\N)\(S\N)) :: \P Q R y.exists z.(P & Q & R(z) & later(y))
later :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & later(y))
later :: (S/S)\N :: \P Q y.exists z.(P(z) & Q(y) & later(y))
later :: ((S\N)\(S\N))/PP :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & later(y))
later :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & later(y))
launched :: S\N :: \P e.exists y.(P(y) & launched:1(e,y))
law :: N :: \x.law(x)
lawn :: N/N :: \x.lawn(x)
lead :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & lead:1(e,y) & lead:2(e,z))
lead :: N :: \x.lead(x)
lead :: S\N :: \P e.exists y.(P(y) & lead:1(e,y))
leader :: N :: \x.leader(x)
leaders :: N :: \x.leaders(x)
leaving :: S\N :: \P e.exists y.(P(y) & leaving:1(e,y))
leaving :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & leaving:1(e,y) & leaving:2(e,z))
left :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & left:1(e,y) & left:2(e,z))
left :: N :: \x.left(x)
legacy :: N :: \x.legacy(x)
legal :: N/N :: \P y.(P(y) & legal(y))
legalization :: N/N :: \x.legalization(x)
legislature :: N :: \x.legislature(x)
less :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & less(y))
letter :: N :: \x.letter(x)
letters :: N :: \x.letters(x)
liberalization :: N :: \x.liberalization(x)
liberty :: N :: \x.liberty(x)
life :: N :: \x.life(x)
lifeguard :: N :: \x.lifeguard(x)
lifelong :: N/N :: \P y.(P(y) & lifelong(y))
lifting :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & lifting:1(e,y) & lifting:2(e,z))
like :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & like:1(e,y) & like:2(e,z))
limousine :: N/N :: \P y.(P(y) & limousine(y))
limousine :: N :: \x.limousine(x)
listens :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & listens:1(e,y) & listens:2(e,z))
live :: S\N :: \P e.exists y.(P(y) & live:1(e,y))
live :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & live:1(e,y) & live:2(e,z))
lived :: S\N :: \P e.exists y.(P(y) & lived:1(e,y))
lived :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & lived:1(e,y) & lived:2(e,z))
lives :: N :: \x.lives(x)
living :: N/N :: \x.living(x)
loans :: N :: \x.loans(x)
located :: S\N :: \P e.exists y.(P(y) & located:1(e,y))
lost :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & lost:1(e,y) & lost:2(e,z))
lot :: N :: \x.lot(x)
lowered :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & lowered:1(e,y) & lowered:2(e,z))
lunch :: N :: \x.lunch(x)
lung :: N :: \x.lung(x)
lying :: S\N :: \P e.exists y.(P(y) & lying:1(e,y))
m :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & _m:1(e,y) & _m:2(e,z))
made :: ((S\N)/(S\N))/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & made:1(e,y) & made:2(e,z) & made:3(e,w))
made :: ((S\N)/N)/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & made:1(e,y) & made:2(e,z) & made:3(e,w))
made :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & made:1(e,y) & made:2(e,z))
mail :: N :: \x.mail(x)
major :: N/N :: \P y.(P(y) & major(y))
majority :: N :: \x.majority(x)
make :: (S\N)/S :: \P Q e.exists z y.(P(z) & Q(y) & make:1(e,y) & make:2(e,z))
man :: N :: \x.man(x)
many :: N :: \x.many(x)
many :: N/N :: \P y.(P(y) & many(y))
mark :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & mark:1(e,y) & mark:2(e,z))
marriage :: N :: \x.marriage(x)
married :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & married:1(e,y) & married:2(e,z))
massacre :: N :: \x.massacre(x)
massive :: N/N :: \P y.(P(y) & massive(y))
me :: N :: \x.EQUAL(x,me)
means :: (S\N)/S :: \P Q e.exists z y.(P(z) & Q(y) & means:1(e,y) & means:2(e,z))
medals :: N :: \x.medals(x)
medicine :: N/N :: \x.medicine(x)
meeting :: N :: \x.meeting(x)
meetings :: N :: \x.meetings(x)
melanoma :: N :: \x.melanoma(x)
memoirs :: N :: \x.memoirs(x)
memorial :: N/N :: \P y.(P(y) & memorial(y))
men :: N :: \x.men(x)
mental :: N/N :: \P y.(P(y) & mental(y))
mentioning :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & mentioning:1(e,y) & mentioning:2(e,z))
military :: N/N :: \P y.(P(y) & military(y))
military :: N :: \x.military(x)
millions :: N :: \x.millions(x)
missile :: N/N :: \x.missile(x)
missiles :: N :: \x.missiles(x)
model :: N :: \x.model(x)
moment :: N :: \x.moment(x)
moments :: N :: \x.moments(x)
money :: N :: \x.money(x)
months :: N\N :: \x.months(x)
months :: N :: \x.months(x)
more :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & more(y))
more :: (N/N)\(N/N) :: \P Q y.(P & Q(y) & more(y))
more :: (N/N)/(N/N) :: \P Q y.(P & Q(y) & more(y))
most :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & most(y))
most :: N/N :: \P y.(P(y) & most(y))
most :: (N/N)/(N/N) :: \P Q y.(P & Q(y) & most(y))
mother :: N :: \x.mother(x)
moved :: S\N :: \P e.exists y.(P(y) & moved:1(e,y))
movements :: N :: \x.movements(x)
movie :: N :: \x.movie(x)
movie :: N/N :: \x.movie(x)
movies :: N :: \x.movies(x)
much :: N :: \x.much(x)
much :: ((S\N)/(S\N))/((S\N)/(S\N)) :: \P Q R y.exists z.(P & Q & R(z) & much(y))
much :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & much(y))
much :: N/N :: \P y.(P(y) & much(y))
multiple :: N/N :: \P y.(P(y) & multiple(y))
my :: N/N :: \x.EQUAL(x,my)
my :: (S/S)\(S/S) :: \x.EQUAL(x,my)
named :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & named:1(e,y) & named:2(e,z))
names :: N :: \x.names(x)
nation :: N :: \x.nation(x)
near :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & near:1(y,z) & near:2(y,y) & near:3(y,w))
near :: (N\N)/N :: \P Q y.exists z.(P(z) & Q(y) & near:1(y,y) & near:2(y,z))
nearby :: N/N :: \P y.(P(y) & nearby(y))
nearest :: PP/N :: \P e.exists y.(P(y) & nearest:1(e,y))
nearly :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & nearly(y))
never :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & never(y))
never :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & never(y))
new :: N/N :: \P y.(P(y) & new(y))
news :: N/N :: \x.news(x)
nicked :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & nicked:1(e,y) & nicked:2(e,z))
nickname :: N :: \x.nickname(x)
nominated :: S\N :: \P e.exists y.(P(y) & nominated:1(e,y))
nominated :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & nominated:1(e,y) & nominated:2(e,z))
nomination :: N :: \x.nomination(x)
nose :: N/N :: \x.nose(x)
not :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & NEGATION(y))
not :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & NEGATION(y))
now :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & now(y))
nt :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & nt(y))
nuclear :: N/N :: \P y.(P(y) & nuclear(y))
of :: (N\N)/N :: \P Q y.exists z.(P(z) & Q(y) & of:1(y,y) & of:2(y,z))
of :: (N\N)/N :: \P e.exists y.(P(y) & of:1(e,y))
of :: (N\N)/N :: \P Q R y.exists w.(P(w) & Q & R(y) & of:1(y,y) & of:2(y,w))
of :: (N\N)/(S\N) :: \P Q y.exists z.(P(z) & Q(y) & of:1(y,y) & of:2(y,z))
of :: PP/N :: \P e.exists y.(P(y) & of:1(e,y))
of :: ((N/N)\(N/N))/N :: \P Q R y.exists w.(P(w) & Q & R(y) & of:1(y,y) & of:2(y,w))
office :: N :: \x.office(x)
officer :: N :: \x.officer(x)
officer :: N/N :: \x.officer(x)
often :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & often(y))
often :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & often(y))
old :: (S\N)\N :: \P Q e.exists z y.(P(z) & Q(y) & old(e))
older :: N/N :: \P y.(P(y) & older(y))
oldest :: N/N :: \P y.(P(y) & oldest(y))
on :: PP/(S\N) :: \P e.exists y.(P(y) & on:1(e,y))
on :: (N\N)/N :: \P Q y.exists z.(P(z) & Q(y) & on:1(y,y) & on:2(y,z))
on :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & on:1(y,z) & on:2(y,y) & on:3(y,w))
on :: PP/N :: \P e.exists y.(P(y) & on:1(e,y))
on :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & on:1(y,z) & on:2(y,y))
onboard :: N\N :: \x.onboard(x)
once :: ((S\N)\(S\N))/((S\N)\(S\N)) :: \P Q R y.exists z.(P & Q & R(z) & once(y))
once :: S\N :: \P e.exists y.(P(y) & once(e))
one :: N/N :: \P y.(P(y) & COUNT(y,one))
one :: N :: \x.one(x)
only :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & only(y))
only :: N/N :: \P y.(P(y) & only(y))
open :: N/N :: \P y.(P(y) & open(y))
open :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & open(e))
opened :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & opened:1(e,y) & opened:2(e,z))
opening :: N/N :: \x.opening(x)
openness :: N :: \x.openness(x)
operations :: N :: \x.operations(x)
opinion :: N/N :: \x.opinion(x)
opinion :: N :: \x.opinion(x)
opposed :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & opposed:1(e,y) & opposed:2(e,z))
opposite :: N/N :: \P y.(P(y) & opposite(y))
optimism :: N :: \x.optimism(x)
or :: conj :: \P Q x.(P(x) & Q(x))
ordered :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & ordered:1(e,y) & ordered:2(e,z))
ordered :: ((S\N)/(S\N))/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & ordered:1(e,y) & ordered:2(e,z) & ordered:3(e,w))
ordered :: S\N :: \P e.exists y.(P(y) & ordered:1(e,y))
ordering :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & ordering:1(e,y) & ordering:2(e,z))
originally :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & originally(y))
other :: N/N :: \P y.(P(y) & other(y))
our :: N/N :: \x.EQUAL(x,our)
out :: ((S\N)\(S\N))/PP :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & out:1(y,z) & out:2(y,y) & out:3(y,w))
outside :: ((S\N)\(S\N))/PP :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & outside:1(y,z) & outside:2(y,y) & outside:3(y,w))
over :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & over:1(y,z) & over:2(y,y) & over:3(y,w))
overthrow :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & overthrow:1(e,y) & overthrow:2(e,z))
paralyzed :: S\N :: \P e.exists y.(P(y) & paralyzed:1(e,y))
paralyzing :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & paralyzing:1(e,y) & paralyzing:2(e,z))
parks :: N :: \x.parks(x)
part :: N :: \x.part(x)
parties :: N :: \x.parties(x)
party :: N :: \x.party(x)
passage :: N :: \x.passage(x)
passenger :: N/N :: \x.passenger(x)
pay :: N :: \x.pay(x)
pay :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & pay:1(e,y) & pay:2(e,z))
peace :: N :: \x.peace(x)
peacefully :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & peacefully(y))
peacetime :: N/N :: \x.peacetime(x)
people :: N :: \x.people(x)
performed :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & performed:1(e,y) & performed:2(e,z))
person :: N :: \x.person(x)
personnel :: N :: \x.personnel(x)
persuaded :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & persuaded:1(e,y) & persuaded:2(e,z))
photo :: N :: \x.photo(x)
phrase :: N :: \x.phrase(x)
physical :: N/N :: \P y.(P(y) & physical(y))
place :: N :: \x.place(x)
place :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & place:1(e,y) & place:2(e,z))
places :: N :: \x.places(x)
plan :: N/N :: \x.plan(x)
plan :: N :: \x.plan(x)
plane :: N :: \x.plane(x)
played :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & played:1(e,y) & played:2(e,z))
pneumonia :: N :: \x.pneumonia(x)
policies :: N :: \x.policies(x)
policy :: N :: \x.policy(x)
political :: N/N :: \P y.(P(y) & political(y))
politician :: N :: \x.politician(x)
politics :: N :: \x.politics(x)
polls :: N :: \x.polls(x)
poor :: S\N :: \P e.exists y.(P(y) & poor(e))
poor :: N :: \x.poor(x)
poor :: N/N :: \P y.(P(y) & poor(y))
popular :: N/N :: \P y.(P(y) & popular(y))
popular :: S\N :: \P e.exists y.(P(y) & popular(e))
popularity :: N :: \x.popularity(x)
postponed :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & postponed:1(e,y) & postponed:2(e,z))
power :: N :: \x.power(x)
praised :: ((S\N)/PP)/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & praised:1(e,y) & praised:2(e,z) & praised:3(e,w))
presented :: S\N :: \P e.exists y.(P(y) & presented:1(e,y))
preserve :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & preserve:1(e,y) & preserve:2(e,z))
presidency :: N :: \x.presidency(x)
president :: N :: \x.president(x)
president :: N/N :: \x.president(x)
presidential :: N/N :: \P y.(P(y) & presidential(y))
presidents :: N :: \x.presidents(x)
presidents :: N/N :: \x.presidents(x)
prevent :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & prevent:1(e,y) & prevent:2(e,z))
profit :: N :: \x.profit(x)
program :: N :: \x.program(x)
programs :: N/N :: \x.programs(x)
progression :: N :: \x.progression(x)
proposed :: (S\N)/S :: \P Q e.exists z y.(P(z) & Q(y) & proposed:1(e,y) & proposed:2(e,z))
prosperity :: N :: \x.prosperity(x)
prostate :: N :: \x.prostate(x)
protest :: N :: \x.protest(x)
provisions :: N :: \x.provisions(x)
public :: N :: \x.public(x)
public :: N/N :: \P y.(P(y) & public(y))
published :: S\N :: \P e.exists y.(P(y) & published:1(e,y))
punctured :: N/N :: \P y.(P(y) & punctured(y))
quickly :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & quickly(y))
quiet :: N/N :: \P y.(P(y) & quiet(y))
radio :: N/N :: \x.radio(x)
raised :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & raised:1(e,y) & raised:2(e,z))
ran :: S\N :: \P e.exists y.(P(y) & ran:1(e,y))
ran :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & ran:1(e,y) & ran:2(e,z))
ranch :: N :: \x.ranch(x)
ranked :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & ranked:1(e,y) & ranked:2(e,z))
rankings :: N :: \x.rankings(x)
rates :: N :: \x.rates(x)
reached :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & reached:1(e,y) & reached:2(e,z))
reaching :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & reaching:1(e,y) & reaching:2(e,z))
read :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & read:1(e,y) & read:2(e,z))
receive :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & receive:1(e,y) & receive:2(e,z))
received :: ((S\N)/PP)/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & received:1(e,y) & received:2(e,z) & received:3(e,w))
received :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & received:1(e,y) & received:2(e,z))
recently :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & recently(y))
recognition :: N :: \x.recognition(x)
recognize :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & recognize:1(e,y) & recognize:2(e,z))
recorded :: N/N :: \P y.(P(y) & recorded(y))
recovered :: S\N :: \P e.exists y.(P(y) & recovered:1(e,y))
recovering :: S\N :: \P e.exists y.(P(y) & recovering:1(e,y))
recovery :: N :: \x.recovery(x)
recreate :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & recreate:1(e,y) & recreate:2(e,z))
recreating :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & recreating:1(e,y) & recreating:2(e,z))
reelected :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & reelected:1(e,y) & reelected:2(e,z))
reelected :: S\N :: \P e.exists y.(P(y) & reelected:1(e,y))
reenlisted :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & reenlisted:1(e,y) & reenlisted:2(e,z))
reform :: N :: \x.reform(x)
regained :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & regained:1(e,y) & regained:2(e,z))
regularly :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & regularly(y))
regulating :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & regulating:1(e,y) & regulating:2(e,z))
rehired :: S\N :: \P e.exists y.(P(y) & rehired(e))
release :: N :: \x.release(x)
remainder :: N :: \x.remainder(x)
remained :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & remained:1(e,y) & remained:2(e,z))
remains :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & remains:1(e,y) & remains:2(e,z))
remember :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & remember:1(e,y) & remember:2(e,z))
remembers :: N :: \x.remembers(x)
remove :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & remove:1(e,y) & remove:2(e,z))
removed :: S\N :: \P e.exists y.(P(y) & removed:1(e,y))
renovated :: S\N :: \P e.exists y.(P(y) & renovated:1(e,y))
reopened :: S\N :: \P e.exists y.(P(y) & reopened:1(e,y))
repaired :: S\N :: \P e.exists y.(P(y) & repaired:1(e,y))
reporting :: (S\N)/S :: \P Q e.exists z y.(P(z) & Q(y) & reporting:1(e,y) & reporting:2(e,z))
represents :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & represents:1(e,y) & represents:2(e,z))
reputation :: N :: \x.reputation(x)
research :: N/N :: \x.research(x)
research :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & research:1(e,y) & research:2(e,z))
research :: N :: \x.research(x)
resigning :: S\N :: \P e.exists y.(P(y) & resigning:1(e,y))
restrictions :: N :: \x.restrictions(x)
result :: N :: \x.result(x)
resulted :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & resulted:1(e,y) & resulted:2(e,z))
returned :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & returned:1(e,y) & returned:2(e,z))
returned :: S\N :: \P e.exists y.(P(y) & returned:1(e,y))
returns :: N :: \x.returns(x)
reviews :: N :: \x.reviews(x)
rib :: N/N :: \x.rib(x)
right :: N/N :: \P y.(P(y) & right(y))
role :: N :: \x.role(x)
rotunda :: N :: \x.rotunda(x)
run :: N :: \x.run(x)
run :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & run:1(e,y) & run:2(e,z))
s :: (N/N)\N :: \P Q y.exists z.(P(z) & Q(y) & _s:1(y,y) & _s:2(y,z))
s :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & _s:1(e,y) & _s:2(e,z))
s :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & _s:1(e,y) & _s:2(e,z))
said :: (S\N)/S :: \P Q e.exists z y.(P(z) & Q(y) & said:1(e,y) & said:2(e,z))
same :: N/N :: \P y.(P(y) & same(y))
saved :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & saved:1(e,y) & saved:2(e,z))
saw :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & saw:1(e,y) & saw:2(e,z))
scandal :: N :: \x.scandal(x)
scandal :: N/N :: \x.scandal(x)
scandals :: N :: \x.scandals(x)
school :: N :: \x.school(x)
scores :: N :: \x.scores(x)
screen :: N/N :: \x.screen(x)
sea :: N :: \x.sea(x)
second :: N/N :: \P y.(P(y) & second(y))
security :: N :: \x.security(x)
see :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & see:1(e,y) & see:2(e,z))
seek :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & seek:1(e,y) & seek:2(e,z))
seem :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & seem:1(e,y) & seem:2(e,z))
seen :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & seen:1(e,y) & seen:2(e,z))
selling :: ((S\N)/PP)/N :: \P Q y.exists z.(P(y) & Q(z) & selling:1(y,z) & selling:2(y,y))
semiisolation :: N :: \x.semiisolation(x)
senate :: N :: \x.senate(x)
senile :: S\N :: \P e.exists y.(P(y) & senile(e))
sent :: ((S\N)/PP)/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & sent:1(e,y) & sent:2(e,z) & sent:3(e,w))
sentence :: (S\N)\(S\N) :: \x.sentence(x)
separated :: S\N :: \P e.exists y.(P(y) & separated:1(e,y))
served :: S\N :: \P e.exists y.(P(y) & served:1(e,y))
served :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & served:1(e,y) & served:2(e,z))
served :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & served:1(e,y) & served:2(e,z))
service :: N :: \x.service(x)
settled :: S\N :: \P e.exists y.(P(y) & settled:1(e,y))
shadows :: N :: \x.shadows(x)
shape :: N :: \x.shape(x)
she :: N :: \x.EQUAL(x,she)
ship :: N :: \x.ship(x)
shocked :: S\N :: \P e.exists y.(P(y) & shocked:1(e,y))
shot :: S\N :: \P e.exists y.(P(y) & shot:1(e,y))
shot :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & shot:1(e,y) & shot:2(e,z))
show :: N :: \x.show(x)
showed :: S\N :: \P Q y.exists z.(P(y) & Q(z) & showed:1(y,z) & showed:2(y,y))
shown :: S\N :: \P e.exists y.(P(y) & shown:1(e,y))
sick :: S\N :: \P e.exists y.(P(y) & sick(e))
sign :: N/S :: \x.sign(x)
signed :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & signed:1(e,y) & signed:2(e,z))
signed :: ((S\N)/PP)/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & signed:1(e,y) & signed:2(e,z) & signed:3(e,w))
signing :: N :: \x.signing(x)
since :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & since:1(y,z) & since:2(y,y) & since:3(y,w))
since :: (N\N)/S :: \P Q y.exists z.(P(z) & Q(y) & since:1(y,y) & since:2(y,z))
singed :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & singed:1(e,y) & singed:2(e,z))
six :: N/N :: \P y.(P(y) & COUNT(y,six))
skin :: N/N :: \x.skin(x)
slow :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & slow:1(e,y) & slow:2(e,z))
slowly :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & slowly(y))
small :: S\N :: \P e.exists y.(P(y) & small(e))
small :: N/N :: \P y.(P(y) & small(y))
smaller :: S\N :: \P e.exists y.(P(y) & smaller(e))
so :: S\N :: \P e.exists y.(P(y) & so(e))
socialized :: N/N :: \P y.(P(y) & socialized(y))
society :: N :: \x.society(x)
sometimes :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & sometimes(y))
son :: N :: \x.son(x)
soon :: S/S :: \P y.(P(y) & soon(y))
soon :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & soon(y))
soon :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & soon(y))
space :: N/N :: \x.space(x)
speaker :: N :: \x.speaker(x)
speaking :: N/N :: \x.speaking(x)
speaking :: N :: \x.speaking(x)
speaking :: S\N :: \P e.exists y.(P(y) & speaking:1(e,y))
speaks :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & speaks:1(e,y) & speaks:2(e,z))
special :: N/N :: \P y.(P(y) & special(y))
speech :: N :: \x.speech(x)
speeches :: N :: \x.speeches(x)
spending :: N :: \x.spending(x)
spoke :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & spoke:1(e,y) & spoke:2(e,z))
spoke :: S\N :: \P e.exists y.(P(y) & spoke:1(e,y))
spokesperson :: N :: \x.spokesperson(x)
sponsors :: N :: \x.sponsors(x)
sports :: N/N :: \x.sports(x)
star :: N :: \x.star(x)
star :: (S\N)\(S\N) :: \x.star(x)
starred :: S\N :: \P e.exists y.(P(y) & starred:1(e,y))
starring :: N/N :: \P y.(P(y) & starring:1(y,y))
start :: N :: \x.start(x)
started :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & started:1(e,y) & started:2(e,z))
state :: N :: \x.state(x)
state :: N/N :: \x.state(x)
statement :: N :: \x.statement(x)
states :: N :: \x.states(x)
station :: N/N :: \x.station(x)
station :: N :: \x.station(x)
statue :: N :: \x.statue(x)
stem :: N/N :: \x.stem(x)
stemcell :: N/N :: \P y.(P(y) & stemcell(y))
step :: N :: \x.step(x)
step :: S\N :: \P e.exists y.(P(y) & step:1(e,y))
still :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & still(y))
still :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & still(y))
stopped :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & stopped:1(e,y) & stopped:2(e,z))
strengthen :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & strengthen:1(e,y) & strengthen:2(e,z))
strongly :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & strongly(y))
stuck :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & stuck:1(e,y) & stuck:2(e,z))
student :: N/N :: \x.student(x)
students :: N :: \x.students(x)
succeeded :: ((S\N)/PP)/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & succeeded:1(e,y) & succeeded:2(e,z) & succeeded:3(e,w))
success :: N :: \x.success(x)
successful :: S\N :: \P e.exists y.(P(y) & successful(e))
successful :: N/N :: \P y.(P(y) & successful(y))
such :: (N\N)/(N\N) :: \P Q y.(P & Q(y) & such(y))
such :: N/N :: \P y.(P(y) & such(y))
suffered :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & suffered:1(e,y) & suffered:2(e,z))
sunlight :: N :: \x.sunlight(x)
sunset :: N :: \x.sunset(x)
supplyside :: N/N :: \P y.(P(y) & supplyside(y))
support :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & support:1(e,y) & support:2(e,z))
supported :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & supported:1(e,y) & supported:2(e,z))
supported :: (S\N)/N :: \P y.(P(y) & supported:1(y,y))
supporting :: N/N :: \P y.(P(y) & supporting:1(y,y))
supposed :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & supposed:1(e,y) & supposed:2(e,z))
surgery :: N :: \x.surgery(x)
survive :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & survive:1(e,y) & survive:2(e,z))
survived :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & survived:1(e,y) & survived:2(e,z))
sworn :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & sworn:1(e,y) & sworn:2(e,z))
symptoms :: N :: \x.symptoms(x)
system :: N :: \x.system(x)
tactical :: N/N :: \P y.(P(y) & tactical(y))
take :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & take:1(e,y) & take:2(e,z))
taken :: S\N :: \P e.exists y.(P(y) & taken:1(e,y))
talks :: N :: \x.talks(x)
tax :: N/N :: \x.tax(x)
taxes :: N :: \x.taxes(x)
tear :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & tear:1(e,y) & tear:2(e,z))
televised :: N/N :: \P y.(P(y) & televised(y))
television :: N :: \x.television(x)
tell :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & tell:1(e,y) & tell:2(e,z))
tell :: ((S\N)/S)/N :: \P Q e.exists z y.(P(z) & Q(y) & tell:1(e,y) & tell:2(e,z))
ten :: N/N :: \P y.(P(y) & ten(y))
term :: N :: \x.term(x)
terrorist :: N/N :: \P y.(P(y) & terrorist(y))
text :: N :: \x.text(x)
than :: (N\N)/N :: \P Q y.exists z.(P(z) & Q(y) & than:1(y,y) & than:2(y,z))
thank :: N/N :: \P y.(P(y) & thank(y))
that :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & that:1(y,z) & that:2(y,y))
that :: (N\N)/S :: \P Q y.exists z.(P(z) & Q(y) & that:1(y,y) & that:2(y,z))
that :: S/S :: \P e.exists y.(P(y) & that:1(e,y))
that :: (N\N)/(S\N) :: \P Q y.exists z.(P(z) & Q(y) & that:1(y,y) & that:2(y,z))
the :: N/N :: \P y.(P(y) & UNIQUE(y))
the :: ((S\N)\(S\N))/N :: \P y.(P(y) & UNIQUE(y))
the :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & UNIQUE(y))
their :: N/N :: \x.EQUAL(x,their)
them :: N :: \x.EQUAL(x,them)
then :: N/N :: \P y.(P(y) & then(y))
then :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & then(y))
then :: S/S :: \P y.(P(y) & then(y))
thenPresident :: N/N :: \P y.(P(y) & thenpresident(y))
therapy :: N :: \x.therapy(x)
they :: N :: \x.EQUAL(x,they)
things :: N :: \x.things(x)
third :: N/N :: \P y.(P(y) & third(y))
though :: (S/S)/S :: \P Q y.exists z.(P(z) & Q(y) & though:1(y,y) & though:2(y,z))
thought :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & thought:1(e,y) & thought:2(e,z))
thought :: S\N :: \P y.(P(y) & thought:1(y,y))
thought :: (S\N)/S :: \P Q e.exists z y.(P(z) & Q(y) & thought:1(e,y) & thought:2(e,z))
thousand :: N/N :: \P y.(P(y) & COUNT(y,thousand))
threat :: N :: \x.threat(x)
three :: N/N :: \P y.(P(y) & COUNT(y,three))
through :: PP/N :: \P e.exists y.(P(y) & through:1(e,y))
throughout :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & throughout:1(y,z) & throughout:2(y,y) & throughout:3(y,w))
time :: N :: \x.time(x)
times :: (S\N)\(S\N) :: \x.times(x)
title :: N :: \x.title(x)
titled :: S\N :: \P e.exists y.(P(y) & titled:1(e,y))
to :: PP/(S\N) :: \P e.exists y.(P(y) & to:1(e,y))
to :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & to:1(y,z) & to:2(y,y) & to:3(y,w))
to :: ((S\N)\(S\N))/N :: \P Q e.exists y z.(P(y) & Q(z) & to:1(e,z) & to:2(e,y))
to :: PP/N :: \P e.exists y.(P(y) & to:1(e,y))
to :: PP/N :: \P Q e.exists y z.(P(y) & Q(z) & to:1(e,z) & to:2(e,y))
to :: (S\N)/(S\N) :: \P Q e.exists y z.(P(y) & Q(z) & to:1(e,z) & to:2(e,y))
to :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & to:1(y,z) & to:2(y,y))
to :: (N\N)/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & to:1(y,z) & to:2(y,y) & to:3(y,w))
to :: (N\N)/N :: \P Q y.exists z.(P(z) & Q(y) & to:1(y,y) & to:2(y,z))
to :: (N\N)/N :: \P Q x.(P(x) & Q(x))
to :: (N\N)/N :: \P Q e.exists y z.(P(y) & Q(z) & to:1(e,z) & to:2(e,y))
to :: (N\N)/N :: \P Q y.exists z.(P(y) & Q(z) & to:1(y,z) & to:2(y,y))
together :: S\N :: \P e.exists y.(P(y) & together(e))
together :: N\N :: \P y.(P(y) & together(y))
told :: (S\N)/S :: \P Q e.exists z y.(P(z) & Q(y) & told:1(e,y) & told:2(e,z))
told :: ((S\N)/S)/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & told:1(e,y) & told:2(e,z) & told:3(e,w))
tomb :: N :: \x.tomb(x)
tonight :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & tonight(y))
tonight :: N :: \x.tonight(x)
too :: (N/N)/(N/N) :: \P Q y.(P & Q(y) & too(y))
took :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & took:1(e,y) & took:2(e,z))
took :: ((S\N)/PP)/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & took:1(e,y) & took:2(e,z) & took:3(e,w))
trade :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & trade:1(e,y) & trade:2(e,z))
tragedy :: N :: \x.tragedy(x)
trailer :: N :: \x.trailer(x)
travelled :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & travelled:1(e,y) & travelled:2(e,z))
tribute :: N :: \x.tribute(x)
true :: S\N :: \P e.exists y.(P(y) & true(e))
truth :: N :: \x.truth(x)
turned :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & turned:1(e,y) & turned:2(e,z))
twice :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & twice(y))
two :: N/N :: \P y.(P(y) & COUNT(y,two))
two :: ((S\N)\(S\N))/((S\N)\(S\N)) :: \P Q R y.exists z.(P & Q & R(z) & COUNT(y,two))
two :: (N\N)/(N\N) :: \P Q y.(P & Q(y) & COUNT(y,two))
ultimately :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & ultimately(y))
unable :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & unable(e))
unarmed :: N/N :: \P y.(P(y) & unarmed(y))
unfinished :: N/N :: \P y.(P(y) & unfinished(y))
unmistakable :: S\N :: \P e.exists y.(P(y) & unmistakable(e))
until :: (S/S)/N :: \P Q y.exists z.(P(z) & Q(y) & until:1(y,y) & until:2(y,z))
until :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & until:1(y,z) & until:2(y,y) & until:3(y,w))
unveiled :: S\N :: \P e.exists y.(P(y) & unveiled:1(e,y))
unveiled :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & unveiled:1(e,y) & unveiled:2(e,z))
unveiling :: N :: \x.unveiling(x)
upcoming :: N/N :: \P y.(P(y) & upcoming(y))
urged :: ((S\N)/(S\N))/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & urged:1(e,y) & urged:2(e,z) & urged:3(e,w))
use :: N :: \x.use(x)
use :: ((S\N)/(S\N))/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & use:1(e,y) & use:2(e,z) & use:3(e,w))
used :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & used:1(e,y) & used:2(e,z))
used :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & used:1(e,y) & used:2(e,z))
version :: N :: \x.version(x)
very :: ((S\N)\(S\N))/((S\N)\(S\N)) :: \P Q R y.exists z.(P & Q & R(z) & very(y))
very :: (N/N)/(N/N) :: \P Q y.(P & Q(y) & very(y))
very :: (S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & very(y))
vetoed :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & vetoed:1(e,y) & vetoed:2(e,z))
vice :: N/N :: \x.vice(x)
vicepresident :: N :: \x.vicepresident(x)
victory :: N :: \x.victory(x)
views :: N :: \x.views(x)
visit :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & visit:1(e,y) & visit:2(e,z))
visited :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & visited:1(e,y) & visited:2(e,z))
visitors :: N :: \x.visitors(x)
vote :: N :: \x.vote(x)
voted :: ((S\N)/N)/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & voted:1(e,y) & voted:2(e,z) & voted:3(e,w))
voter :: N :: \x.voter(x)
votes :: N :: \x.votes(x)
walking :: N :: \x.walking(x)
wall :: N :: \x.wall(x)
want :: ((S\N)/(S\N))/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & want:1(e,y) & want:2(e,z) & want:3(e,w))
wanted :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & wanted:1(e,y) & wanted:2(e,z))
war :: N :: \x.war(x)
was :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & was:1(e,y) & was:2(e,z))
was :: (S\N)/(S\N) :: \P Q y.exists x.(Q(x) & P(x))
was :: (S\N)/(S\N) :: \P e.exists y.(P(y) & was:1(e,y))
was :: (S\N)/(S\N) :: \P y.(P(y) & was:1(y,y))
was :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & was:1(e,y) & was:2(e,z))
was :: S\N :: \P e.exists y.(P(y) & was:1(e,y))
was :: (S\N)/N :: \P Q y.exists x.(Q(x) & P(x))
was :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & was:1(e,y) & was:2(e,z))
watched :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & watched:1(e,y) & watched:2(e,z))
waving :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & waving:1(e,y) & waving:2(e,z))
we :: N :: \x.EQUAL(x,we)
weapons :: N :: \x.weapons(x)
wearing :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & wearing:1(e,y) & wearing:2(e,z))
week :: N :: \x.week(x)
welcome :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & welcome:1(e,y) & welcome:2(e,z))
welfare :: N/N :: \x.welfare(x)
well :: (S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & well(y))
went :: S\N :: \P e.exists y.(P(y) & went:1(e,y))
went :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & went:1(e,y) & went:2(e,z))
were :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & were:1(e,y) & were:2(e,z))
were :: (S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & were:1(e,y) & were:2(e,z))
while :: (N\N)/(S\N) :: \P Q y.exists z.(P(z) & Q(y) & while:1(y,y) & while:2(y,z))
wife :: N :: \x.wife(x)
win :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & win:1(e,y) & win:2(e,z))
winning :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & winning:1(e,y) & winning:2(e,z))
with :: (N\N)/N :: \P Q y.exists z.(P(z) & Q(y) & with:1(y,y) & with:2(y,z))
with :: (((S\N)\(S\N))/(S\N))/N :: \P Q R S y.exists u w z.(P(u) & Q(w) & R(y) & S(z) & with:1(y,z) & with:2(y,y) & with:3(y,w) & with:4(y,u))
with :: PP/N :: \P e.exists y.(P(y) & with:1(e,y))
with :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & with:1(y,z) & with:2(y,y) & with:3(y,w))
without :: ((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & without:1(y,z) & without:2(y,y) & without:3(y,w))
women :: N :: \x.women(x)
won :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & won:1(e,y) & won:2(e,z))
work :: N :: \x.work(x)
worked :: (S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & worked:1(e,y) & worked:2(e,z))
workers :: N :: \x.workers(x)
workforce :: N :: \x.workforce(x)
world :: N :: \x.world(x)
world :: N/N :: \x.world(x)
writing :: N :: \x.writing(x)
wrote :: (S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & wrote:1(e,y) & wrote:2(e,z))
year :: N/N :: \x.year(x)
year :: N :: \x.year(x)
years :: N :: \x.years(x)
you :: N :: \x.EQUAL(x,you)
younger :: N/N :: \P y.(P(y) & younger(y))
– :: N :: \x._–(x)
# CATEGORIES
N :: \x.EQUAL(x,{0})
N :: \x.{0}(x)
N :: \P y.(P(y) & COUNT(y,{0}))
S/S :: \P y.(P(y) & {0}(y))
S/S :: \P e.exists y.(P(y) & {0}:1(e,y))
S/S :: \P Q x.(P(x) & Q(x))
S\N :: \P e.exists y.(P(y) & {0}(e))
S\N :: \P e.exists y.(P(y) & {0}:1(e,y))
S\N :: \P Q y.exists z.(P(y) & Q(z) & {0}:1(y,z) & {0}:2(y,y))
S\N :: \P y.(P(y) & {0}:1(y,y))
N/N :: \P y.(P(y) & COUNT(y,{0}))
N/N :: \P y.(P(y) & {0}(y))
N/N :: \x.EQUAL(x,{0})
N/N :: \x.{0}(x)
N/N :: \P y.(P(y) & UNIQUE(y))
N/N :: \P y.(P(y) & {0}:1(y,y))
N/N :: None
N/S :: \x.{0}(x)
N\N :: \P y.(P(y) & COUNT(y,{0}))
N\N :: \x.{0}(x)
N\N :: \P y.(P(y) & {0}(y))
N\N :: \x.EQUAL(x,{0})
conj :: \P Q x.(P(x) & Q(x))
PP/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & {0}:1(y,z) & {0}:2(y,y) & {0}:3(y,w))
PP/N :: \P e.exists y.(P(y) & {0}:1(e,y))
PP/N :: \P Q y.exists z.(P(y) & Q(z) & {0}:1(y,z) & {0}:2(y,y))
PP/N :: \P Q e.exists y z.(P(y) & Q(z) & {0}:1(e,z) & {0}:2(e,y))
(N\N)/S :: \P Q y.exists z.(P(z) & Q(y) & {0}:1(y,y) & {0}:2(y,z))
(S\N)/S :: \P Q e.exists z y.(P(z) & Q(y) & {0}:1(e,y) & {0}:2(e,z))
(N\N)/N :: \x.EQUAL(x,{0})
(N\N)/N :: \P Q y.exists z.(P(z) & Q(y) & {0}:1(y,y) & {0}:2(y,z))
(N\N)/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & {0}:1(y,z) & {0}:2(y,y) & {0}:3(y,w))
(N\N)/N :: \P e.exists y.(P(y) & {0}:1(e,y))
(N\N)/N :: \P Q R y.exists w.(P(w) & Q & R(y) & {0}:1(y,y) & {0}:2(y,w))
(N\N)/N :: \P Q x.(P(x) & Q(x))
(N\N)/N :: \P Q e.exists y z.(P(y) & Q(z) & {0}:1(e,z) & {0}:2(e,y))
(N\N)/N :: \P Q y.exists z.(P(y) & Q(z) & {0}:1(y,z) & {0}:2(y,y))
(S\N)\N :: \P Q e.exists z y.(P(z) & Q(y) & {0}(e))
(S/S)\N :: \P Q y.exists z.(P(z) & Q(y) & {0}(y))
(S/S)\N :: \P Q y.exists z.(P(z) & Q(y) & {0}:1(y,y) & {0}:2(y,z))
(S/S)/N :: \P Q y.exists z.(P(z) & Q(y) & {0}:1(y,y) & {0}:2(y,z))
(S/S)/S :: \P Q y.exists z.(P(z) & Q(y) & {0}:1(y,y) & {0}:2(y,z))
(S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & {0}:1(e,y) & {0}:2(e,z))
(S\N)/N :: \P Q y.exists x.(Q(x) & P(x))
(S\N)/N :: \P Q y.exists z.(P(y) & Q(z) & {0}:1(y,z) & {0}:2(y,y))
(S\N)/N :: \P Q e.exists z y.(P(z) & Q(y) & {0}(e))
(S\N)/N :: \P y.(P(y) & {0}:1(y,y))
(N/N)\N :: \P Q y.exists z.(P(z) & Q(y) & {0}:1(y,y) & {0}:2(y,z))
PP/(S\N) :: \P e.exists y.(P(y) & {0}:1(e,y))
(S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & {0}(e))
(S\N)/PP :: \P Q e.exists z y.(P(z) & Q(y) & {0}:1(e,y) & {0}:2(e,z))
(S\N)/PP :: \P y.(P(y) & {0}:1(y,y))
(S/S)/PP :: \P Q y.exists z.(P(z) & Q(y) & {0}(y))
((S\N)/S)/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & {0}:1(e,y) & {0}:2(e,z) & {0}:3(e,w))
((S\N)/S)/N :: \P Q e.exists z y.(P(z) & Q(y) & {0}:1(e,y) & {0}:2(e,z))
(S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & {0}(y))
(S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & {0}:1(y,z) & {0}:2(y,y))
(S\N)\(S\N) :: \x.{0}(x)
(S\N)\(S\N) :: \P Q y.exists z.(P(y) & Q(z) & NEGATION(y))
(S\N)\(S\N) :: \x.EQUAL(x,{0})
((S\N)/N)/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & {0}:1(e,y) & {0}:2(e,z) & {0}:3(e,w))
(S/S)/(S/S) :: \P Q y.(P & Q(y) & {0}(y))
(S/S)/(S\N) :: \P Q y.exists z.(P(z) & Q(y) & {0}:1(y,y) & {0}:2(y,z))
(N/N)/(N/N) :: \P Q y.(P & Q(y) & {0}(y))
(S/S)\(S/S) :: \x.EQUAL(x,{0})
(N\N)/(N\N) :: \P Q y.(P & Q(y) & {0}(y))
(N\N)/(N\N) :: \P Q y.(P & Q(y) & COUNT(y,{0}))
(N/N)\(N/N) :: \P Q y.(P & Q(y) & {0}(y))
(N\N)/(S\N) :: \P Q y.exists z.(P(z) & Q(y) & {0}:1(y,y) & {0}:2(y,z))
(S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & {0}(y))
(S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & {0}:1(e,y) & {0}:2(e,z))
(S\N)/(S\N) :: \P Q e.exists z y.(P(z) & Q(y) & {0}(e))
(S\N)/(S\N) :: \P Q y.exists x.(Q(x) & P(x))
(S\N)/(S\N) :: \P e.exists y.(P(y) & {0}:1(e,y))
(S\N)/(S\N) :: \P y.(P(y) & {0}:1(y,y))
(S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & NEGATION(y))
(S\N)/(S\N) :: \P Q y.exists z.(P(y) & Q(z) & {0}:1(y,z) & {0}:2(y,y))
(S\N)/(S\N) :: \x.EQUAL(x,{0})
(N\N)\(N\N) :: \P Q y.(P & Q(y) & COUNT(y,{0}))
((S\N)/PP)/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & {0}:1(e,y) & {0}:2(e,z) & {0}:3(e,w))
((S\N)/PP)/N :: \P Q y.exists z.(P(y) & Q(z) & {0}:1(y,z) & {0}:2(y,y))
((S/S)/PP)/N :: \P Q R y.exists w z.(P(w) & Q(z) & R(y) & {0}:1(y,y) & {0}:2(y,z) & {0}:3(y,w))
((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & {0}:1(y,z) & {0}:2(y,y) & {0}:3(y,w))
((S\N)\(S\N))/N :: \P y.(P(y) & UNIQUE(y))
((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & UNIQUE(y))
((S\N)\(S\N))/N :: \x.EQUAL(x,{0})
((S\N)\(S\N))/N :: \P Q e.exists y z.(P(y) & Q(z) & {0}:1(e,z) & {0}:2(e,y))
((S\N)\(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & {0}(y))
((S\N)/(S\N))/S :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & {0}:1(y,z) & {0}:2(y,y) & {0}:3(y,w))
((N/N)\(N/N))/N :: \P Q R y.exists w.(P(w) & Q & R(y) & {0}:1(y,y) & {0}:2(y,w))
((S\N)\(S\N))/S :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & {0}:1(y,z) & {0}:2(y,y) & {0}:3(y,w))
((S\N)/(S\N))/N :: \P Q R e.exists w z y.(P(w) & Q(z) & R(y) & {0}:1(e,y) & {0}:2(e,z) & {0}:3(e,w))
((S\N)/(S\N))/N :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & {0}:1(y,z) & {0}:2(y,y) & {0}:3(y,w))
((S\N)\(S\N))/PP :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & {0}(y))
((S\N)\(S\N))/PP :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & {0}:1(y,z) & {0}:2(y,y) & {0}:3(y,w))
((S\N)\(S\N))/(S\N) :: \P Q R y.exists w z.(P(w) & Q(y) & R(z) & {0}:1(y,z) & {0}:2(y,y) & {0}:3(y,w))
(((S\N)\(S\N))/(S\N))/N :: \P Q R S y.exists u w z.(P(u) & Q(w) & R(y) & S(z) & {0}:1(y,z) & {0}:2(y,y) & {0}:3(y,w) & {0}:4(y,u))
((S\N)\(S\N))/((S\N)\(S\N)) :: \P Q R y.exists z.(P & Q & R(z) & {0}(y))
((S\N)\(S\N))/((S\N)\(S\N)) :: \P Q R y.exists z.(P & Q & R(z) & COUNT(y,{0}))
((S\N)/(S\N))/((S\N)/(S\N)) :: \P Q R y.exists z.(P & Q & R(z) & {0}(y))
(((S\N)\(S\N))/((S\N)\(S\N)))/N :: \P Q R S y.exists v z.(P(v) & Q & R & S(z) & {0}:1(y,z) & {0}:2(y,v))
