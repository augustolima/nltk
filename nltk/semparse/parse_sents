#! /bin/bash

# ======================
# Parses input sentences using the C&C
# CCG parser and formats output as 
# required by the lexicon building scripts.
# ======================

usage() { echo "Usage: $0 [-i <path/to/inputfile>] [-o <path/to/outputfile>]" 1>&2; exit 1; }

while getopts ':i:o:' opt; do
    case ${opt} in
	i ) infile=${OPTARG};;
	o ) outfile=${OPTARG};;
	* ) usage;;
    esac
done

if [ -z "${infile}" ] || [ -z "${outfile}" ]; then
    usage
fi

bin/pos --model models/pos_questions --input ${infile} --output pos.out

bin/parser --model models/parser --super models/super_questions \
	   --parser-seen_rules false --parser-question_rules true \
	   --input pos.out --output ${outfile} --printer deps

rm pos.out

sed '/^#/d' ${outfile} | \
tail -n +2 | \
head -n -1 | \
sed 's/^$/===/' > temp.txt
vim +":%s/===\n<c>.*\n//g" +:wq temp.txt
mv temp.txt ${outfile}
