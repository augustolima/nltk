#! /bin/bash

# ==========================================
# Parses input sentences using the C&C
# CCG parser and formats output as 
# required by the lexicon building scripts.
# 
#  How to use this script
#  ---------------------- 
#  This script requires the Clark & Curran (C&C) CCG parser.
#  So if you don't have it, download it first.
#
#  Do one of two:
#    + Put the C&C parser directory in your PATH
#
#    + Copy the parse_sents script and the input file of tokenized
#        sentences into the C&C parser directory. Run the
#        script from within that directory.
#
#  Follow the parse_sents usage instructions.
# ==========================================


usage() { echo "Usage: $0 [-h] -i <path/to/inputfile> -o <path/to/outputfile>" 1>&2; exit 1; }

show_help() {
	echo 
	echo "#  How to use this script"
	echo "#  ---------------------- "
	echo "#  This script requires the Clark & Curran (C&C) CCG parser."
	echo "#  So if you don't have it, download it first."
	echo "#"
	echo "#  Do one of two:"
	echo "#    + Put the C&C parser directory in your PATH"
	echo "#"
	echo "#    + Copy the parse_sents script and the input file of tokenized"
	echo "#        sentences into the C&C parser directory. Run the"
	echo "#        script from within that directory."
	echo "#"
	echo "#  Follow the parse_sents usage instructions."
	printf "#  " 
	usage
}

while getopts ':i:o:h' opt; do
    case ${opt} in
	h ) show_help;;
	i ) infile=${OPTARG};;
	o ) outfile=${OPTARG};;
	* ) usage;;
    esac
done

if [ -z "${infile}" ] || [ -z "${outfile}" ]; then
    usage
fi

bin/pos --model models/pos_questions --input ${infile} --output pos.out

bin/parser --model models/parser --super models/super_questions \
	   --parser-seen_rules false --parser-question_rules true \
	   --input pos.out --output ${outfile} --printer deps

rm pos.out

sed '/^#/d' ${outfile} | \
tail -n +2 | \
head -n -1 | \
sed 's/^$/===/' > temp.txt
vim +":%s/===\n<c>.*\n//g" +:wq temp.txt
mv temp.txt ${outfile}
